cmake_minimum_required(VERSION 2.8)
project(fdlibm)

enable_language(C)

IF (NOT DEFINED FDLIBM_MODE)
	set(FDLIBM_MODE _IEEE_LIBM)
ENDIF()
add_definitions("-D${FDLIBM_MODE}")

include(TestBigEndian)

TEST_BIG_ENDIAN(IS_BIG_ENDIAN)
if(${IS_BIG_ENDIAN})
add_definitions("-D__BIG_ENDIAN")
else()
add_definitions("-D__LITTLE_ENDIAN")
endif()

set(SOURCES 
b_exp.c
b_log.c
b_tgamma.c
e_acos.c
e_acosf.c
e_acosh.c
e_acoshf.c
e_asin.c
e_asinf.c
e_atan2.c
e_atan2f.c
e_atanh.c
e_atanhf.c
e_cosh.c
e_coshf.c
e_exp.c
e_expf.c
e_fmod.c
e_fmodf.c
e_gamma.c
e_gamma_r.c
e_hypot.c
e_hypotf.c
e_j0.c
e_j0f.c
e_j1.c
e_j1f.c
e_jn.c
e_jnf.c
e_lgamma.c
e_lgamma_r.c
e_lgammaf_r.c
e_log.c
e_log10.c
e_log10f.c
e_log2.c
e_log2f.c
e_logf.c
e_pow.c
e_powf.c
e_rem_pio2.c
e_rem_pio2f.c
e_remainder.c
e_remainderf.c
e_scalb.c
e_scalbf.c
e_sinh.c
e_sinhf.c
e_sqrt.c
e_sqrtf.c
k_cos.c
k_cosf.c
k_rem_pio2.c
k_rem_pio2f.c
k_sin.c
k_sinf.c
k_standard.c
k_tan.c
k_tanf.c
s_asinh.c
s_asinhf.c
s_atan.c
s_atanf.c
s_cbrt.c
s_cbrtf.c
s_ceil.c
s_ceilf.c
s_copysign.c
s_copysignf.c
s_cos.c
s_cosf.c
s_erf.c
s_erff.c
s_exp2f.c
s_expm1.c
s_expm1f.c
s_fabs.c
s_fabsf.c
s_finite.c
s_finitef.c
s_floor.c
s_floorf.c
s_fmaxf.c
s_fminf.c
s_frexp.c
s_frexpf.c
s_ilogb.c
s_ilogbf.c
s_isnan.c
s_ldexp.c
s_lib_version.c
s_log1p.c
s_log1pf.c
s_logb.c
s_logbf.c
s_matherr.c
s_modf.c
s_modff.c
s_nextafter.c
s_nextafterf.c
s_remquof.c
s_rint.c
s_rintf.c
s_roundf.c
s_scalbn.c
s_scalbnf.c
s_signbit.c
s_signgam.c
s_significand.c
s_significandf.c
s_sin.c
s_sinf.c
s_tan.c
s_tanf.c
s_tanh.c
s_tanhf.c
s_trunc.c
s_truncf.c
w_acos.c
w_acosh.c
w_asin.c
w_atan2.c
w_atanh.c
w_cosh.c
w_dremf.c
w_exp.c
w_fmod.c
w_gamma.c
w_gamma_r.c
w_gammaf.c
w_hypot.c
w_j0.c
w_j1.c
w_jn.c
w_lgamma.c
w_lgamma_r.c
w_lgammaf.c
w_log.c
w_log10.c
w_pow.c
w_remainder.c
w_scalb.c
w_sinh.c
w_sqrt.c
)

add_library(fdlibm STATIC ${SOURCES})