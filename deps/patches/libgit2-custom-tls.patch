diff --git a/CMakeLists.txt b/CMakeLists.txt
index 93a9e47..75fe5ef 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -542,6 +542,9 @@ IF (OPENSSL_FOUND)
   SET(SSL_LIBRARIES ${OPENSSL_LIBRARIES})
 ENDIF()
 
+IF (USE_CUSTOM_TLS)
+  ADD_DEFINITIONS(-DGIT_CUSTOM_TLS)
+ENDIF()
 
 
 IF (THREADSAFE)
diff --git a/src/settings.c b/src/settings.c
index 00a3ef0..61e0199 100644
--- a/src/settings.c
+++ b/src/settings.c
@@ -29,7 +29,7 @@ int git_libgit2_features(void)
 #ifdef GIT_THREADS
 		| GIT_FEATURE_THREADS
 #endif
-#if defined(GIT_OPENSSL) || defined(GIT_WINHTTP) || defined(GIT_SECURE_TRANSPORT)
+#if defined(GIT_OPENSSL) || defined(GIT_WINHTTP) || defined(GIT_SECURE_TRANSPORT) || defined(GIT_CUSTOM_TLS)
 		| GIT_FEATURE_HTTPS
 #endif
 #if defined(GIT_SSH)
diff --git a/src/transport.c b/src/transport.c
index 327052f..c4f3254 100644
--- a/src/transport.c
+++ b/src/transport.c
@@ -29,7 +29,7 @@ static transport_definition local_transport_definition = { "file://", git_transp
 static transport_definition transports[] = {
 	{ "git://",   git_transport_smart, &git_subtransport_definition },
 	{ "http://",  git_transport_smart, &http_subtransport_definition },
-#if defined(GIT_OPENSSL) || defined(GIT_WINHTTP) || defined(GIT_SECURE_TRANSPORT)
+#if defined(GIT_OPENSSL) || defined(GIT_WINHTTP) || defined(GIT_SECURE_TRANSPORT) || defined(GIT_CUSTOM_TLS)
 	{ "https://", git_transport_smart, &http_subtransport_definition },
 #endif
 	{ "file://",  git_transport_local, NULL },
diff --git a/src/transports/http.c b/src/transports/http.c
index 4fbbfbb..9ef05c6 100644
--- a/src/transports/http.c
+++ b/src/transports/http.c
@@ -620,7 +620,7 @@ static int http_connect(http_subtransport *t)
 
 	error = git_stream_connect(t->io);
 
-#if defined(GIT_OPENSSL) || defined(GIT_SECURE_TRANSPORT) || defined(GIT_CURL)
+#if defined(GIT_OPENSSL) || defined(GIT_SECURE_TRANSPORT) || defined(GIT_CURL) || defined(GIT_CUSTOM_TLS)
 	if ((!error || error == GIT_ECERTIFICATE) && t->owner->certificate_check_cb != NULL &&
 	    git_stream_is_encrypted(t->io)) {
 		git_cert *cert;
