commit e83088cbec5e5798651f02e2ff6b11969994cc86
Author: Keno Fischer <keno@juliacomputing.com>
Date:   Mon Jul 1 16:43:53 2019 -0400

    With utils disabled, don't build tblgen in cross mode
    
    Summary:
    In cross mode, we build a separate NATIVE tblgen that runs on the
    host and is used during the build. Separately, we have a flag that
    disables building all executables in utils/. Of course generally,
    this doesn't turn off tblgen, since we need that during the build.
    In cross mode, however, that tblegen is useless since we never
    actually use it. Furthermore, it can be actively problematic if the
    cross toolchain doesn't like building executables for whatever reason.
    And even if building executables works fine, we can at least save
    compile time by omitting it from the target build. There's two changes
    needed to make this happen:
    - Stop creating a dependency from the native tool to the target tool.
      No such dependency is required for a correct build, so I'm not entirely
      sure why it was there in the first place.
    - If utils were disabled on the CMake command line and we're in cross mode,
      respect that by excluding it from the install target (using EXCLUDE_FROM_ALL).
    
    Reviewers: smeenai, compnerd, aganea, pzheng
    
    Subscribers: mgorny, llvm-commits
    
    Tags: #llvm
    
    Differential Revision: https://reviews.llvm.org/D64032

diff --git a/cmake/modules/TableGen.cmake b/cmake/modules/TableGen.cmake
index d1afcb42f9d..095b316d627 100644
--- a/cmake/modules/TableGen.cmake
+++ b/cmake/modules/TableGen.cmake
@@ -127,9 +127,6 @@ macro(add_tablegen target project)
     set(LLVM_ENABLE_OBJLIB ON)
   endif()
 
-  add_llvm_executable(${target} DISABLE_LLVM_LINK_LLVM_DYLIB ${ARGN})
-  set(LLVM_LINK_COMPONENTS ${${target}_OLD_LLVM_LINK_COMPONENTS})
-
   set(${project}_TABLEGEN "${target}" CACHE
       STRING "Native TableGen executable. Saves building one when cross-compiling.")
 
@@ -160,15 +157,22 @@ macro(add_tablegen target project)
                                     CONFIGURATION Release)
       add_custom_command(OUTPUT ${${project}_TABLEGEN_EXE}
         COMMAND ${tblgen_build_cmd}
-        DEPENDS CONFIGURE_LLVM_NATIVE ${target}
+        DEPENDS CONFIGURE_LLVM_NATIVE
         WORKING_DIRECTORY ${LLVM_NATIVE_BUILD}
         COMMENT "Building native TableGen..."
         USES_TERMINAL)
       add_custom_target(${project}-tablegen-host DEPENDS ${${project}_TABLEGEN_EXE})
       set(${project}_TABLEGEN_TARGET ${project}-tablegen-host PARENT_SCOPE)
+
+      if ( NOT LLVM_BUILD_UTILS )
+        set(EXCLUDE_FROM_ALL ON)
+      endif()
     endif()
   endif()
 
+  add_llvm_executable(${target} DISABLE_LLVM_LINK_LLVM_DYLIB ${ARGN})
+  set(LLVM_LINK_COMPONENTS ${${target}_OLD_LLVM_LINK_COMPONENTS})
+
   if (${project} STREQUAL LLVM AND NOT LLVM_INSTALL_TOOLCHAIN_ONLY)
     if(${target} IN_LIST LLVM_DISTRIBUTION_COMPONENTS OR
         NOT LLVM_DISTRIBUTION_COMPONENTS)
