commit 6823a639a4a2d3e2b4a44bab6da78e1659431063
Author: Elliot Saba <staticfloat@gmail.com>
Date:   Tue Nov 17 19:29:06 2020 +0000

    Backport SVN revisions r1256 and r1257 to fix compilations errors

    Without this patch, compilation errors such as `"-mshstk is needed to compile with -fcf-protection"`
    occur on newer Ubuntu distros.  This is a backport of upstreams patch, along with a partial-update
    of `configure` so that users do not have to run `aclocal` on their machines when building from source.

    X-ref: https://bugs.exim.org/show_bug.cgi?id=2578

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 86b8896..a368523 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -92,6 +92,7 @@
 #            library versioning.
 # 2020-04-25 Carlo added function check for mkostemp used in ProtExecAllocator
 # 2020-04-28 PH added function check for memfd_create based on Carlo's patch
+# 2020-05-25 PH added a check for Intel CET
 
 PROJECT(PCRE2 C)
 
@@ -146,6 +147,23 @@ CHECK_C_SOURCE_COMPILES(
 )
 set(CMAKE_REQUIRED_FLAGS ${ORIG_CMAKE_REQUIRED_FLAGS})
 
+# Check whether Intel CET is enabled, and if so, adjust compiler flags. This
+# code was written by PH, trying to imitate the logic from the autotools
+# configuration.
+
+CHECK_C_SOURCE_COMPILES(
+  "#ifndef __CET__
+   #error CET is not enabled
+   #endif
+   int main() { return 0; }"
+  INTEL_CET_ENABLED
+)
+
+IF (INTEL_CET_ENABLED)
+  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mshstk")
+ENDIF(INTEL_CET_ENABLED)
+
+
 # User-configurable options
 #
 # Note: CMakeSetup displays these in alphabetical order, regardless of
diff --git a/ChangeLog b/ChangeLog
index 310eb60..f238cce 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,6 +1,15 @@
 Change Log for PCRE2
 --------------------
 
+Version 10.36-RC1 25-May-2020
+-----------------------------
+
+1. Add CET_CFLAGS so that when Intel CET is enabled, pass -mshstk to
+compiler. This fixes https://bugs.exim.org/show_bug.cgi?id=2578. Patch for
+Makefile.am and configure.ac by H.J. Lu. Equivalent patch for CMakeLists.txt
+invented by PH.
+
+
 Version 10.35 09-May-2020
 ---------------------------
 
diff --git a/Makefile.am b/Makefile.am
index bb888f2..6a771a5 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -391,6 +391,7 @@ nodist_libpcre2_8_la_SOURCES = \
 libpcre2_8_la_CFLAGS = \
   -DPCRE2_CODE_UNIT_WIDTH=8 \
   $(VISIBILITY_CFLAGS) \
+  $(CET_CFLAGS) \
   $(AM_CFLAGS)
 libpcre2_8_la_LIBADD =
 endif # WITH_PCRE2_8
@@ -404,6 +405,7 @@ nodist_libpcre2_16_la_SOURCES = \
 libpcre2_16_la_CFLAGS = \
   -DPCRE2_CODE_UNIT_WIDTH=16 \
   $(VISIBILITY_CFLAGS) \
+  $(CET_CFLAGS) \
   $(AM_CFLAGS)
 libpcre2_16_la_LIBADD =
 endif # WITH_PCRE2_16
@@ -417,6 +419,7 @@ nodist_libpcre2_32_la_SOURCES = \
 libpcre2_32_la_CFLAGS = \
   -DPCRE2_CODE_UNIT_WIDTH=32 \
   $(VISIBILITY_CFLAGS) \
+  $(CET_CFLAGS) \
   $(AM_CFLAGS)
 libpcre2_32_la_LIBADD =
 endif # WITH_PCRE2_32
diff --git a/Makefile.in b/Makefile.in
index 2873912..0ce7004 100644
--- a/Makefile.in
+++ b/Makefile.in
@@ -806,6 +806,7 @@ AUTOMAKE = @AUTOMAKE@
 AWK = @AWK@
 CC = @CC@
 CCDEPMODE = @CCDEPMODE@
+CET_CFLAGS = @CET_CFLAGS@
 CFLAGS = @CFLAGS@
 CPP = @CPP@
 CPPFLAGS = @CPPFLAGS@
@@ -1310,8 +1311,9 @@ COMMON_SOURCES = \
 @WITH_PCRE2_8_TRUE@  $(NODIST_SOURCES)

 @WITH_PCRE2_8_TRUE@libpcre2_8_la_CFLAGS = -DPCRE2_CODE_UNIT_WIDTH=8 \
-@WITH_PCRE2_8_TRUE@	$(VISIBILITY_CFLAGS) $(AM_CFLAGS) \
-@WITH_PCRE2_8_TRUE@	$(am__append_5) $(am__append_8)
+@WITH_PCRE2_8_TRUE@	$(VISIBILITY_CFLAGS) $(CET_CFLAGS) \
+@WITH_PCRE2_8_TRUE@	$(AM_CFLAGS) $(am__append_5) \
+@WITH_PCRE2_8_TRUE@	$(am__append_8)
 @WITH_PCRE2_8_TRUE@libpcre2_8_la_LIBADD =
 @WITH_PCRE2_16_TRUE@libpcre2_16_la_SOURCES = \
 @WITH_PCRE2_16_TRUE@  $(COMMON_SOURCES)
@@ -1321,8 +1323,9 @@ COMMON_SOURCES = \

 @WITH_PCRE2_16_TRUE@libpcre2_16_la_CFLAGS =  \
 @WITH_PCRE2_16_TRUE@	-DPCRE2_CODE_UNIT_WIDTH=16 \
-@WITH_PCRE2_16_TRUE@	$(VISIBILITY_CFLAGS) $(AM_CFLAGS) \
-@WITH_PCRE2_16_TRUE@	$(am__append_6) $(am__append_9)
+@WITH_PCRE2_16_TRUE@	$(VISIBILITY_CFLAGS) $(CET_CFLAGS) \
+@WITH_PCRE2_16_TRUE@	$(AM_CFLAGS) $(am__append_6) \
+@WITH_PCRE2_16_TRUE@	$(am__append_9)
 @WITH_PCRE2_16_TRUE@libpcre2_16_la_LIBADD =
 @WITH_PCRE2_32_TRUE@libpcre2_32_la_SOURCES = \
 @WITH_PCRE2_32_TRUE@  $(COMMON_SOURCES)
@@ -1332,8 +1335,9 @@ COMMON_SOURCES = \

 @WITH_PCRE2_32_TRUE@libpcre2_32_la_CFLAGS =  \
 @WITH_PCRE2_32_TRUE@	-DPCRE2_CODE_UNIT_WIDTH=32 \
-@WITH_PCRE2_32_TRUE@	$(VISIBILITY_CFLAGS) $(AM_CFLAGS) \
-@WITH_PCRE2_32_TRUE@	$(am__append_7) $(am__append_10)
+@WITH_PCRE2_32_TRUE@	$(VISIBILITY_CFLAGS) $(CET_CFLAGS) \
+@WITH_PCRE2_32_TRUE@	$(AM_CFLAGS) $(am__append_7) \
+@WITH_PCRE2_32_TRUE@	$(am__append_10)
 @WITH_PCRE2_32_TRUE@libpcre2_32_la_LIBADD =
 @WITH_PCRE2_8_TRUE@libpcre2_8_la_LDFLAGS = $(EXTRA_LIBPCRE2_8_LDFLAGS)
 @WITH_PCRE2_16_TRUE@libpcre2_16_la_LDFLAGS = $(EXTRA_LIBPCRE2_16_LDFLAGS)
diff --git a/configure b/configure
index 615f638..322a3a4 100755
--- a/configure
+++ b/configure
@@ -633,6 +633,7 @@ ac_subst_vars='am__EXEEXT_FALSE
 am__EXEEXT_TRUE
 LTLIBOBJS
 LIBOBJS
+CET_CFLAGS
 WITH_GCOV_FALSE
 WITH_GCOV_TRUE
 GCOV_LIBS
@@ -15493,6 +15494,46 @@ else
 fi


+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether Intel CET is enabled" >&5
+$as_echo_n "checking whether Intel CET is enabled... " >&6; }
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+#ifndef __CET__
+# error CET is not enabled
+#endif
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  pcre2_cc_cv_intel_cet_enabled=yes
+else
+  pcre2_cc_cv_intel_cet_enabled=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $pcre2_cc_cv_intel_cet_enabled" >&5
+$as_echo "$pcre2_cc_cv_intel_cet_enabled" >&6; }
+if test "$pcre2_cc_cv_intel_cet_enabled" = yes; then
+  CET_CFLAGS="-mshstk"
+
+fi
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
 # Produce these files, in addition to config.h.
 ac_config_files="$ac_config_files Makefile libpcre2-8.pc libpcre2-16.pc libpcre2-32.pc libpcre2-posix.pc pcre2-config src/pcre2.h"

diff --git a/configure.ac b/configure.ac
index 180d3dc..61b93ba 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1006,6 +1006,21 @@ fi # enable_coverage
 
 AM_CONDITIONAL([WITH_GCOV],[test "x$enable_coverage" = "xyes"])
 
+AC_MSG_CHECKING([whether Intel CET is enabled])
+AC_LANG_PUSH([C])
+AC_COMPILE_IFELSE([AC_LANG_PROGRAM(,
+                   [[#ifndef __CET__
+# error CET is not enabled
+#endif]])],
+                   [pcre2_cc_cv_intel_cet_enabled=yes],
+                   [pcre2_cc_cv_intel_cet_enabled=no])
+AC_MSG_RESULT([$pcre2_cc_cv_intel_cet_enabled])
+if test "$pcre2_cc_cv_intel_cet_enabled" = yes; then
+  CET_CFLAGS="-mshstk"
+  AC_SUBST([CET_CFLAGS])
+fi
+AC_LANG_POP([C])
+
 # Produce these files, in addition to config.h.
 AC_CONFIG_FILES(
 	Makefile
