From de496d3cdf5d77967c04a7d6c599f8f7e53e9c9f Mon Sep 17 00:00:00 2001
From: Valentin Churavy <v.churavy@gmail.com>
Date: Mon, 18 Mar 2019 16:18:40 -0400
Subject: [PATCH] AMDGPU ignore custom AS

---
 llvm/lib/Target/AMDGPU/AMDGPU.h           | 1 +
 llvm/lib/Target/AMDGPU/SIISelLowering.cpp | 4 ++--
 2 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/llvm/lib/Target/AMDGPU/AMDGPU.h b/llvm/lib/Target/AMDGPU/AMDGPU.h
index 0ddc43ad503..6065abf6732 100644
--- a/llvm/lib/Target/AMDGPU/AMDGPU.h
+++ b/llvm/lib/Target/AMDGPU/AMDGPU.h
@@ -251,6 +251,7 @@ struct AMDGPUAS {
     CONSTANT_BUFFER_13 = 21,
     CONSTANT_BUFFER_14 = 22,
     CONSTANT_BUFFER_15 = 23,
+    LAST = CONSTANT_BUFFER_15,
 
     // Some places use this if the address space can't be determined.
     UNKNOWN_ADDRESS_SPACE = ~0u,
diff --git a/llvm/lib/Target/AMDGPU/SIISelLowering.cpp b/llvm/lib/Target/AMDGPU/SIISelLowering.cpp
index 41ca7fe8bfa..90108c8be98 100644
--- a/llvm/lib/Target/AMDGPU/SIISelLowering.cpp
+++ b/llvm/lib/Target/AMDGPU/SIISelLowering.cpp
@@ -1063,8 +1063,8 @@ static bool isFlatGlobalAddrSpace(unsigned AS, AMDGPUAS AMDGPUASI) {
 
 bool SITargetLowering::isNoopAddrSpaceCast(unsigned SrcAS,
                                            unsigned DestAS) const {
-  return isFlatGlobalAddrSpace(SrcAS, AMDGPUASI) &&
-         isFlatGlobalAddrSpace(DestAS, AMDGPUASI);
+  return (isFlatGlobalAddrSpace(SrcAS, AMDGPUASI) || SrcAS > AMDGPUASI.LAST) &&
+         (isFlatGlobalAddrSpace(DestAS, AMDGPUASI) || DestAS > AMDGPUASI.LAST);
 }
 
 bool SITargetLowering::isMemOpHasNoClobberedMemOperand(const SDNode *N) const {
-- 
2.21.0

