agents:
  queue: "julia"
  # Only run on `sandbox.jl` machines (not `docker`-isolated ones) since we need nestable sandboxing
  sandbox.jl: "true"
  os: "linux"
steps:
  - label: ":unlock: :coverage: Run coverage test"
    # We must accept the signed job id secret in order to propagate secrets
    env:
      BUILDKITE_PLUGIN_CRYPTIC_BASE64_SIGNED_JOB_ID_SECRET: ${BUILDKITE_PLUGIN_CRYPTIC_BASE64_SIGNED_JOB_ID_SECRET?}
    depends_on:
    plugins:
      - staticfloat/cryptic:
          variables:
            - CODECOV_TOKEN="U2FsdGVkX19l0fhdBabbuiEdysyEabkJLRHfxm7CNRkuGbnwPV365sxxC7Czs/CVcws0N1oB4pVwALRRMe36oA=="
            - COVERALLS_TOKEN="U2FsdGVkX19zopI0hMNzzi2UUOvNVFD8Y0iisFnO/ryVxU7Tit8ZEaeN+gxodRx4CosUUh192F1+q3dTMWRIvw=="
      - JuliaCI/julia#v1:
          # Drop default "registries" directory, so it is not persisted from execution to execution
          persist_depot_dirs: packages,artifacts,compiled
          version: '1.6'
      - staticfloat/sandbox#v1:
          rootfs_url: https://github.com/JuliaCI/rootfs-images/releases/download/v4.8/package_linux.x86_64.tar.gz
          rootfs_treehash: "2a058481b567f0e91b9aa3ce4ad4f09e6419355a"
          uid: 1000
          gid: 1000
    timeout_in_minutes: 360 # 360 minutes = 6 hours
    commands: |
      echo "--- Build Julia from source"
      make --output-sync -j 6

      echo "--- Print Julia version info"
      ./julia -e 'using InteractiveUtils; InteractiveUtils.versioninfo()'
      ./julia -e '@info "" Sys.CPU_THREADS'
      # this is necessary to make sure that the LibGit2 tests passes
      git config --global init.defaultBranch master

      echo "--- Run Julia tests in parallel with code coverage enabled"
      export JULIA_NUM_THREADS=1
      export JULIA_WORKER_TIMEOUT=1200 # 1200 seconds = 20 minutes
      ./julia -e 'import Distributed; @info "" Distributed.worker_timeout()'
      ./julia .buildkite/pipelines/scheduled/coverage/run_tests_parallel.jl

      echo "--- Process and upload coverage information"
      ./julia .buildkite/pipelines/scheduled/coverage/upload_coverage.jl
