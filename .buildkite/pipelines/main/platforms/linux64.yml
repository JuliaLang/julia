agents:
  queue: "julia"
  # Only run on `sandbox.jl` machines (not `docker`-isolated ones) since we need nestable sandboxing
  sandbox.jl: "true"
  os: "linux"
steps:
  - label: "i_will_pass"
    key: "i_will_pass"
    plugins:
      - JuliaCI/julia#v1:
          # Drop default "registries" directory, so it is not persisted from execution to execution
          persist_depot_dirs: packages,artifacts,compiled
          version: 1.6
      - staticfloat/sandbox#v1:
          rootfs_url: https://github.com/JuliaCI/rootfs-images/releases/download/v3.1/package_linux.x86_64.tar.gz
          rootfs_treehash: "8c33c341a864852629b8aac01a6eb6a79b73570e"
          uid: 1000
          gid: 1000
          workspaces:
            # Include `/cache/repos` so that our `git` version introspection works.
            - "/cache/repos:/cache/repos"
    commands: |
      exit 0
    timeout_in_minutes: 20
    notify:
      - github_commit_status:
          context: "i_will_pass"
        if: build.state != "passed"
  - label: "i_will_fail"
    key: "i_will_fail"
    plugins:
      - JuliaCI/julia#v1:
          version: 1.6
      - staticfloat/sandbox#v1:
          rootfs_url: https://github.com/JuliaCI/rootfs-images/releases/download/v3.1/package_linux.x86_64.tar.gz
          rootfs_treehash: "8c33c341a864852629b8aac01a6eb6a79b73570e"
          uid: 1000
          gid: 1000
          workspaces:
            # Include `/cache/repos` so that our `git` version introspection works.
            - "/cache/repos:/cache/repos"
    timeout_in_minutes: 20
    notify:
      - github_commit_status:
          context: "i_will_fail"
        if: build.state != "passed"
    commands: |
      exit 1
