name: Typos

permissions: {}

on: [pull_request]

jobs:
  typos-check:
    name: Check for new typos
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout the JuliaLang/julia repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Check spelling with typos
        #uses: crate-ci/typos@master
        env:
          GH_TOKEN: "${{ github.token }}"
        run: |
          git fetch --depth=1 origin ${{ github.base_ref }}
          OLD_FILES=$(git diff-index --name-only --diff-filter=ad FETCH_HEAD)
          NEW_FILES=$(git diff-index --name-only --diff-filter=d FETCH_HEAD)

          mkdir -p "${{ runner.temp }}/typos"
          RELEASE_ASSET_URL="$(
            gh api /repos/crate-ci/typos/releases/latest \
            --jq '."assets"[] | select(."name" | test("^typos-.+-x86_64-unknown-linux-musl\\.tar\\.gz$")) | ."browser_download_url"'
          )"
          wget --secure-protocol=TLSv1_3 --max-redirect=1 --retry-on-host-error --retry-connrefused --tries=3 \
            --quiet --output-document=- "${RELEASE_ASSET_URL}" \
            | tar -xz -C "${{ runner.temp }}/typos" ./typos
          "${{ runner.temp }}/typos/typos" --version

          echo -n $NEW_FILES | xargs "${{ runner.temp }}/typos/typos" --format json >> ${{ runner.temp }}/new_typos.jsonl || true
          git checkout FETCH_HEAD -- $OLD_FILES
          echo -n $OLD_FILES | xargs "${{ runner.temp }}/typos/typos" --format json >> ${{ runner.temp }}/old_typos.jsonl  || true

          python -c '
          import sys, json
          old = set()
          with open(sys.argv[1]) as old_file:
            for line in old_file:
              old.add(json.loads(line)["typo"])
          clean = True
          with open(sys.argv[2]) as new_file:
            for line in new_file:
              new = json.loads(line)
              if new["typo"] not in old:
                if len(new["typo"]) > 6: # Short typos might be false positives. Long are probably real.
                  clean = False
                print("::warning file={},line={},col={}::perhaps \"{}\" should be \"{}\".".format(
                  new["path"], new["line_num"], new["byte_offset"],
                  new["typo"], " or ".join(new["corrections"])))
          sys.exit(1 if not clean else 0)' "${{ runner.temp }}/old_typos.jsonl" "${{ runner.temp }}/new_typos.jsonl"
