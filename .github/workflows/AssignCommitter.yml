name: Assign Committer
on:
  pull_request:
    types: [opened, reopened, ready_for_review]

permissions:
  pull-requests: write

jobs:
  assign-reviewer:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.draft != true }}
    steps:
      - name: Add Assignee
        # We pin all third-party actions to a full length commit SHA
        # https://docs.github.com/en/actions/security-for-github-actions/security-guides/security-hardening-for-github-actions#using-third-party-actions
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            if (context.payload.pull_request.assignees.length === 0) {
              // Find suitable assignees
              const { data: members } = await github.rest.teams.listMembersInOrg({ // TODO This needs read:org permission
                org: "JuliaLang",
                team_slug: "committers",
                per_page: 100, // TODO: use pagination once we have more than 100 committers
              });
              const member_logins = members.map(member => member.login);

              // Skip PRs authored by committers
              const prAuthor = context.payload.pull_request.user.login;
              if (!member_logins.includes(prAuthor)) {

                // Assign random committer
                await github.rest.issues.addAssignees({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.payload.pull_request.number,
                  assignees: member_logins[Math.floor(Math.random()*member_logins.length)],
                });

                // Add the "pr review" label
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.payload.pull_request.number,
                  labels: ['status: waiting for PR reviewer'],
                });
              }
            }
