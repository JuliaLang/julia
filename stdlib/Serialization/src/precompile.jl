# This file is a part of Julia. License is MIT: https://julialang.org/license

precompile(Tuple{typeof(Serialization.object_number), Core.TypeName})
precompile(Tuple{typeof(Serialization.deserialize_array), Serialization.Serializer{Base.PipeEndpoint}})
precompile(Tuple{typeof(Serialization.deserialize), Base.PipeEndpoint})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.PipeEndpoint}})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.PipeEndpoint}, Type{Int64}})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.PipeEndpoint}, Type{QuoteNode}})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.PipeEndpoint}, Type{String}})
precompile(Tuple{typeof(Serialization.deserialize), Serialization.Serializer{Base.PipeEndpoint}, Type{UInt64}})
precompile(Tuple{typeof(Serialization.deserialize_cycle), Serialization.Serializer{Base.PipeEndpoint}, Expr})
precompile(Tuple{typeof(Serialization.deserialize_datatype), Serialization.Serializer{Base.PipeEndpoint}})
precompile(Tuple{typeof(Serialization.deserialize_expr), Serialization.Serializer{Base.PipeEndpoint}, Int64})
precompile(Tuple{typeof(Serialization.handle_deserialize), Serialization.Serializer{Base.PipeEndpoint}, Int32})
precompile(Tuple{typeof(Serialization.serialize_any), Serialization.Serializer{Base.Pipe}, QuoteNode})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.Pipe}, Array{Any, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.Pipe}, Array{String, 1}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.Pipe}, Bool})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.Pipe}, Expr})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.Pipe}, Int64})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.Pipe}, Module})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.Pipe}, QuoteNode})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.Pipe}, Core.SimpleVector})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.Pipe}, String})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.Pipe}, Symbol})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.Pipe}, Tuple{Int64}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.Pipe}, Tuple{Symbol, UInt64}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.Pipe}, Type{Any}})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.Pipe}, Core.TypeName})
precompile(Tuple{typeof(Serialization.serialize), Serialization.Serializer{Base.Pipe}, UInt64})
precompile(Tuple{typeof(Serialization.serialize_cycle), Serialization.Serializer{Base.Pipe}, Expr})
precompile(Tuple{typeof(Serialization.serialize_cycle), Serialization.Serializer{Base.Pipe}, Core.TypeName})
precompile(Tuple{typeof(Serialization.serialize_cycle), Serialization.Serializer{Base.Pipe}, UInt64})
precompile(Tuple{typeof(Serialization.serialize_cycle_header), Serialization.Serializer{Base.Pipe}, QuoteNode})
precompile(Tuple{typeof(Serialization.serialize_mod_names), Serialization.Serializer{Base.Pipe}, Module})
precompile(Tuple{typeof(Serialization.serialize_type), Serialization.Serializer{Base.Pipe}, DataType})
precompile(Tuple{typeof(Serialization.serialize_type_data), Serialization.Serializer{Base.Pipe}, Type{Any}, Bool})
precompile(Tuple{typeof(Serialization.serialize_typename), Serialization.Serializer{Base.Pipe}, Core.TypeName})
precompile(Tuple{typeof(Serialization.should_send_whole_type), Serialization.Serializer{Base.Pipe}, Type{Any}})
precompile(Tuple{typeof(Serialization.write_as_tag), Base.Pipe, Int32})
