language: cpp
os:
    - linux
    - osx
env:
    - ARCH="i686"
    - ARCH="x86_64"
sudo: required
dist: trusty
services: docker
matrix:
  exclude:
    - os: osx
      env: ARCH="i686"
notifications:
    email: false
    irc:
        channels:
            - "chat.freenode.net#julia-notifications"
        on_success: change
        on_failure: always
    webhooks:
        urls:
          - http://status.julialang.org/put/travis
          - http://julia.mit.edu:8000/travis-hook
before_install:
    - make check-whitespace
    - if [ $(uname) = Linux ]; then
        contrib/travis_fastfail.sh || exit 1;
        BUILDOPTS="-j3 VERBOSE=1 FORCE_ASSERTIONS=1";
        DOCKERRUN="sudo docker run -w /home/julia-$ARCH tkelman/julia32-part2:master";
      elif [ $(uname) = Darwin ]; then
        brew update;
        brew install -v jq;
        contrib/travis_fastfail.sh || exit 1;
        brew tap staticfloat/julia;
        brew rm --force $(brew deps --HEAD julia);
        brew install -v --only-dependencies --HEAD julia;
        BUILDOPTS="-j3 USECLANG=1 LLVM_CONFIG=$(brew --prefix llvm33-julia)/bin/llvm-config-3.3 VERBOSE=1 USE_BLAS64=0 SUITESPARSE_INC=-I$(brew --prefix suite-sparse-julia)/include FORCE_ASSERTIONS=1 STAGE2_DEPS=utf8proc";
        BUILDOPTS="$BUILDOPTS LIBBLAS=-lopenblas LIBBLASNAME=libopenblas LIBLAPACK=-lopenblas LIBLAPACKNAME=libopenblas";
        for lib in LLVM SUITESPARSE ARPACK BLAS FFTW LAPACK GMP MPFR PCRE LIBUNWIND LIBGIT2; do
            export BUILDOPTS="$BUILDOPTS USE_SYSTEM_$lib=1";
        done;
        DOCKERRUN="";
        export LDFLAGS="-L$(brew --prefix openblas-julia)/lib -L$(brew --prefix suite-sparse-julia)/lib";
        export DYLD_FALLBACK_LIBRARY_PATH="/usr/local/lib:/lib:/usr/lib:$(brew --prefix openblas-julia)/lib:$(brew --prefix suite-sparse-julia)/lib:$(brew --prefix arpack-julia)/lib";
        make $BUILDOPTS -C contrib -f repackage_system_suitesparse4.make;
      fi
    - git clone -q git://git.kitenet.net/moreutils
    - make -C moreutils mispipe
script:
    - |
      moreutils/mispipe "$DOCKERRUN bash -lc \
      \"if [ $TRAVIS_PULL_REQUEST = false ]; then git fetch origin $TRAVIS_BRANCH: ; else \
      git fetch origin +refs/pull/$TRAVIS_PULL_REQUEST/merge: ; fi && \
      git checkout -qf FETCH_HEAD && \
      make $BUILDOPTS -C base version_git.jl.phony && \
      make $BUILDOPTS NO_GIT=1 JULIA_SYSIMG_BUILD_FLAGS='--output-ji ../usr/lib/julia/sys.ji' prefix=/tmp/julia install && \
      if [ $(uname) = Darwin ]; then \
        for name in suitesparseconfig spqr umfpack colamd cholmod amd suitesparse_wrapper; do \
            install -pm755 usr/lib/lib${name}*.dylib* /tmp/julia/lib/julia/; \
        done; \
      fi && \
      cd .. && rm -rf julia* && \
      cp /tmp/julia/lib/julia/sys.ji local.ji && /tmp/julia/bin/julia -J local.ji -e 'true' && /tmp/julia/bin/julia-debug -J local.ji -e 'true' && rm local.ji && \
      /tmp/julia/bin/julia -e 'versioninfo()' && \
      cd /tmp/julia/share/julia/test && /tmp/julia/bin/julia --check-bounds=yes runtests.jl all && /tmp/julia/bin/julia --check-bounds=yes runtests.jl libgit2-online pkg\" \
      " 'moreutils/ts -s "%.s"'
# uncomment the following if failures are suspected to be due to the out-of-memory killer
#    - sudo dmesg
