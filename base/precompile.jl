# This file is a part of Julia. License is MIT: https://julialang.org/license

# Steps to regenerate this file:
# 1. Remove all `precompile` calls
# 2. Rebuild system image
# 3. Enable TRACE_COMPILE in options.h and rebuild
# 4. Run `./julia 2> precompiles.txt` and do various things.
# 5. Run `grep -v '#[0-9]' precompiles.txt >> base/precompile.jl` (filters out closures, which
#    might have different generated names in different environments)

precompile(Tuple{typeof(ip_matches_func), Ptr{Cvoid}, Symbol})
precompile(Tuple{typeof(Base.pointer), Array{UInt8, 1}, UInt64})
precompile(Tuple{typeof(Base.convert), Type{Ptr{Int32}}, Ptr{UInt8}})
precompile(Tuple{Type{Base.Multimedia.TextDisplay}, Base.TTY})
precompile(Tuple{typeof(Base._start)})
precompile(Tuple{typeof(Base.copyto!), Array{String, 1}, Int64, Array{Any, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.finalizer), typeof(Base.uvfinalize), Base.TCPServer})
precompile(Tuple{Type{Base.TCPServer}, Ptr{Cvoid}, Int64})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Int32})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.Libc.RawFD})
precompile(Tuple{typeof(Base.uv_status_string), Base.TCPServer})
precompile(Tuple{typeof(Base._fd), Base.TCPServer})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Type{Base.TCPServer}, String, Base.Libc.RawFD, String, String, String})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.TCPServer})
precompile(Tuple{typeof(Base.isopen), Base.TCPServer})
precompile(Tuple{typeof(Base.check_open), Base.TCPServer})
precompile(Tuple{typeof(Base.unpreserve_handle), Base.TCPServer})
precompile(Tuple{typeof(Base.stream_wait), Base.TCPServer, Base.Condition})
precompile(Tuple{Type{Base.TCPServer}})
precompile(Tuple{typeof(Base.close), Base.TCPServer})
precompile(Tuple{getfield(Base, Symbol("#kw##listen")), Array{Any, 1}, typeof(Base.listen), Base.TCPServer})
precompile(Tuple{getfield(Base, Symbol("#kw##listen")), Array{Any, 1}, typeof(Base.listen), Base.InetAddr{Base.IPv4}})
precompile(Tuple{typeof(Base.ndigits0z), UInt16})
precompile(Tuple{typeof(Base.dec), UInt16, Int64, Bool})
precompile(Tuple{typeof(Base.Libc.strerror), Int32})
precompile(Tuple{typeof(Base.copyto!), Array{Any, 1}, Base.KeySet{Any, Base.Dict{Any, Any}}})
precompile(Tuple{typeof(Base.promoteK), Type{Any}})
precompile(Tuple{typeof(Core.Compiler.length), Tuple{Core.Compiler.Const, DataType, Core.Compiler.Const, Core.Compiler.Const}})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Core.Compiler.Const, DataType, Core.Compiler.Const, Core.Compiler.Const}, Int64})
precompile(Tuple{typeof(Base.sync_add), Task})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Int64, Tuple{Int64, Tuple{}}}, Int64})
precompile(Tuple{typeof(Base.Sort.Float.isnan), Base.Order.ForwardOrdering, Float32})
precompile(Tuple{typeof(Base.Sort.Float.isnan), Base.Order.ForwardOrdering, Float64})
precompile(Tuple{typeof(Base.Sort.Float.isnan), Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Float32})
precompile(Tuple{typeof(Base.Sort.Float.isnan), Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Float64})
precompile(Tuple{typeof(Base.Sort.Float.issignleft), Base.Order.ForwardOrdering, Float32})
precompile(Tuple{typeof(Base.Sort.Float.issignleft), Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Float32})
precompile(Tuple{typeof(Base.Sort.Float.issignleft), Base.Order.ForwardOrdering, Float64})
precompile(Tuple{typeof(Base.Sort.Float.issignleft), Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}, Float64})
precompile(Tuple{typeof(Core.Compiler.isbits), Base.Sort.Float.Left})
precompile(Tuple{typeof(Base.Sort.Float.left), Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.Sort.Float.left), Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}})
precompile(Tuple{typeof(Core.Compiler.isbits), Base.Sort.Float.Right})
precompile(Tuple{typeof(Base.Sort.Float.right), Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.Sort.Float.right), Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}})
precompile(Tuple{typeof(Base.stat), Int64})
precompile(Tuple{typeof(Base.readbytes_all!), Base.IOStream, Array{UInt8, 1}, Int64})
precompile(Tuple{typeof(Base.read), Base.IOStream})
precompile(Tuple{typeof(Base.rstrip), Base.SubString{String}, Array{Char, 1}})
precompile(Tuple{typeof(Base.lstrip), Base.SubString{String}, Array{Char, 1}})
precompile(Tuple{getfield(Base, Symbol("#kw##split")), Array{Any, 1}, typeof(Base.split), String, Char})
precompile(Tuple{getfield(Base, Symbol("#kw##split")), Array{Any, 1}, typeof(Base.split), Base.SubString{String}, Char})
precompile(Tuple{typeof(Base.map!), typeof(Base.strip), Array{Base.SubString{String}, 1}, Array{Base.SubString{String}, 1}})
precompile(Tuple{Type{Core.Compiler.Generator{I, F} where F where I}, Type{Core.Compiler.Const}, Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}})
precompile(Tuple{Type{Core.Compiler.Generator{Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}, Type{Core.Compiler.Const}}}, Type{Core.Compiler.Const}, Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}})
precompile(Tuple{typeof(Core.Compiler.convert), Type{Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}}, Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}})
precompile(Tuple{typeof(Core.Compiler.collect), Type{Any}, Core.Compiler.Generator{Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler._collect), Type{Any}, Core.Compiler.Generator{Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}, Type{Core.Compiler.Const}}, Core.Compiler.HasLength})
precompile(Tuple{typeof(Core.Compiler.length), Core.Compiler.Generator{Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler.length), Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}})
precompile(Tuple{typeof(Core.Compiler.copyto!), Array{Any, 1}, Core.Compiler.Generator{Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler.start), Core.Compiler.Generator{Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler.start), Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}})
precompile(Tuple{typeof(Core.Compiler.done), Core.Compiler.Generator{Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}, Type{Core.Compiler.Const}}, Int64})
precompile(Tuple{typeof(Core.Compiler.done), Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}, Int64})
precompile(Tuple{typeof(Core.Compiler.next), Core.Compiler.Generator{Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}, Type{Core.Compiler.Const}}, Int64})
precompile(Tuple{typeof(Core.Compiler.next), Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}, Int64})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}, Int64})
precompile(Tuple{typeof(Core.Compiler.start), Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}, Int64}})
precompile(Tuple{typeof(Core.Compiler.indexed_next), Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}, Int64}, Int64, Int64})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}, Int64}, Int64})
precompile(Tuple{typeof(Core.Compiler.isbits), Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}})
precompile(Tuple{typeof(Core.Compiler.isbits), Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}})
precompile(Tuple{Type{Core.Compiler.Generator{I, F} where F where I}, Type{QuoteNode}, Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}})
precompile(Tuple{Type{Core.Compiler.Generator{Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}, Type{QuoteNode}}}, Type{QuoteNode}, Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}})
precompile(Tuple{typeof(Core.Compiler._collect), Type{Any}, Core.Compiler.Generator{Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}, Type{QuoteNode}}, Core.Compiler.HasLength})
precompile(Tuple{typeof(Core.Compiler.length), Core.Compiler.Generator{Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}, Type{QuoteNode}}})
precompile(Tuple{typeof(Core.Compiler.copyto!), Array{Any, 1}, Core.Compiler.Generator{Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}, Type{QuoteNode}}})
precompile(Tuple{typeof(Core.Compiler.start), Core.Compiler.Generator{Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}, Type{QuoteNode}}})
precompile(Tuple{typeof(Core.Compiler.done), Core.Compiler.Generator{Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}, Type{QuoteNode}}, Int64})
precompile(Tuple{typeof(Core.Compiler.next), Core.Compiler.Generator{Tuple{Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}}, Type{QuoteNode}}, Int64})
precompile(Tuple{typeof(Core.Compiler.isbits), Base.DevNullStream})
precompile(Tuple{typeof(Base.finalizer), typeof(Base.uvfinalize), Base.Process})
precompile(Tuple{typeof(Core.Compiler.isbits), Tuple{Base.DevNullStream, Bool}})
precompile(Tuple{Type{Ref{Base.Cstring}}, Array{String, 1}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{String, 1}}})
precompile(Tuple{typeof(Base.string), Nothing, String, DataType})
precompile(Tuple{typeof(Base.print), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, Char})
precompile(Tuple{typeof(Base.throw_boundserror), Base.UnitRange{Int64}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Core.Compiler.convert), Type{DataType}, Type{Bool}})
precompile(Tuple{typeof(Core.Compiler.convert), Type{DataType}, Type{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Core.Compiler.length), Tuple{DataType, DataType, typeof(Type), Core.Compiler.Const, Core.Compiler.Const}})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{DataType, DataType, typeof(Type), Core.Compiler.Const, Core.Compiler.Const}, Int64})
precompile(Tuple{Type{Core.Compiler.Generator{I, F} where F where I}, Type{Core.Compiler.Const}, Tuple{Tuple{}, Tuple{}, Int64}})
precompile(Tuple{Type{Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}, Int64}, Type{Core.Compiler.Const}}}, Type{Core.Compiler.Const}, Tuple{Tuple{}, Tuple{}, Int64}})
precompile(Tuple{typeof(Core.Compiler.convert), Type{Tuple{Tuple{}, Tuple{}, Int64}}, Tuple{Tuple{}, Tuple{}, Int64}})
precompile(Tuple{typeof(Core.Compiler.collect), Type{Any}, Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}, Int64}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler._collect), Type{Any}, Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}, Int64}, Type{Core.Compiler.Const}}, Core.Compiler.HasLength})
precompile(Tuple{typeof(Core.Compiler.length), Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}, Int64}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler.length), Tuple{Tuple{}, Tuple{}, Int64}})
precompile(Tuple{typeof(Core.Compiler.copyto!), Array{Any, 1}, Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}, Int64}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler.start), Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}, Int64}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler.start), Tuple{Tuple{}, Tuple{}, Int64}})
precompile(Tuple{typeof(Core.Compiler.done), Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}, Int64}, Type{Core.Compiler.Const}}, Int64})
precompile(Tuple{typeof(Core.Compiler.done), Tuple{Tuple{}, Tuple{}, Int64}, Int64})
precompile(Tuple{typeof(Core.Compiler.next), Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}, Int64}, Type{Core.Compiler.Const}}, Int64})
precompile(Tuple{typeof(Core.Compiler.next), Tuple{Tuple{}, Tuple{}, Int64}, Int64})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{}, Tuple{}, Int64}, Int64})
precompile(Tuple{typeof(Core.Compiler.isbits), Tuple{Tuple{}, Tuple{}, Int64}})
precompile(Tuple{Type{Core.Compiler.Generator{I, F} where F where I}, Type{QuoteNode}, Tuple{Tuple{}, Tuple{}, Int64}})
precompile(Tuple{Type{Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}, Int64}, Type{QuoteNode}}}, Type{QuoteNode}, Tuple{Tuple{}, Tuple{}, Int64}})
precompile(Tuple{typeof(Core.Compiler._collect), Type{Any}, Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}, Int64}, Type{QuoteNode}}, Core.Compiler.HasLength})
precompile(Tuple{typeof(Core.Compiler.length), Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}, Int64}, Type{QuoteNode}}})
precompile(Tuple{typeof(Core.Compiler.copyto!), Array{Any, 1}, Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}, Int64}, Type{QuoteNode}}})
precompile(Tuple{typeof(Core.Compiler.start), Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}, Int64}, Type{QuoteNode}}})
precompile(Tuple{typeof(Core.Compiler.done), Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}, Int64}, Type{QuoteNode}}, Int64})
precompile(Tuple{typeof(Core.Compiler.next), Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}, Int64}, Type{QuoteNode}}, Int64})
precompile(Tuple{Type{Core.Compiler.Generator{I, F} where F where I}, Type{Core.Compiler.Const}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{Type{Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}}, Type{Core.Compiler.Const}}}, Type{Core.Compiler.Const}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Core.Compiler.convert), Type{Tuple{Tuple{}, Tuple{}}}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Core.Compiler.collect), Type{Any}, Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler._collect), Type{Any}, Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}}, Type{Core.Compiler.Const}}, Core.Compiler.HasLength})
precompile(Tuple{typeof(Core.Compiler.length), Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler.length), Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Core.Compiler.copyto!), Array{Any, 1}, Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler.start), Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler.start), Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Core.Compiler.done), Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}}, Type{Core.Compiler.Const}}, Int64})
precompile(Tuple{typeof(Core.Compiler.done), Tuple{Tuple{}, Tuple{}}, Int64})
precompile(Tuple{typeof(Core.Compiler.next), Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}}, Type{Core.Compiler.Const}}, Int64})
precompile(Tuple{typeof(Core.Compiler.next), Tuple{Tuple{}, Tuple{}}, Int64})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Tuple{}, Tuple{}}, Int64})
precompile(Tuple{Type{Core.Compiler.Generator{I, F} where F where I}, Type{QuoteNode}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{Type{Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}}, Type{QuoteNode}}}, Type{QuoteNode}, Tuple{Tuple{}, Tuple{}}})
precompile(Tuple{typeof(Core.Compiler._collect), Type{Any}, Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}}, Type{QuoteNode}}, Core.Compiler.HasLength})
precompile(Tuple{typeof(Core.Compiler.length), Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}}, Type{QuoteNode}}})
precompile(Tuple{typeof(Core.Compiler.copyto!), Array{Any, 1}, Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}}, Type{QuoteNode}}})
precompile(Tuple{typeof(Core.Compiler.start), Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}}, Type{QuoteNode}}})
precompile(Tuple{typeof(Core.Compiler.done), Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}}, Type{QuoteNode}}, Int64})
precompile(Tuple{typeof(Core.Compiler.next), Core.Compiler.Generator{Tuple{Tuple{}, Tuple{}}, Type{QuoteNode}}, Int64})
precompile(Tuple{typeof(Core.Compiler.length), Tuple{DataType, DataType, DataType, Core.Compiler.Const, Core.Compiler.Const}})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{DataType, DataType, DataType, Core.Compiler.Const, Core.Compiler.Const}, Int64})
precompile(Tuple{typeof(Core.Compiler.length), Tuple{DataType, DataType, typeof(Type), typeof(Type), Core.Compiler.Const}})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{DataType, DataType, typeof(Type), typeof(Type), Core.Compiler.Const}, Int64})
precompile(Tuple{typeof(Core.Compiler.length), Tuple{DataType, DataType, DataType, DataType, Core.Compiler.Const}})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{DataType, DataType, DataType, DataType, Core.Compiler.Const}, Int64})
precompile(Tuple{typeof(Base.unpreserve_handle), Base.Process})
precompile(Tuple{typeof(Base.stream_wait), Base.Process, Base.Condition})
precompile(Tuple{typeof(Base.kill), Base.Process, Int64})
precompile(Tuple{typeof(Core.Compiler.isbits), Base.Dict{Any, Any}})
precompile(Tuple{typeof(Base.answer_color)})
precompile(Tuple{typeof(Base.input_color)})
precompile(Tuple{typeof(Base.show_circular), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Tuple{}})
precompile(Tuple{typeof(Base.show_delim_array), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Tuple{}, Char, Char, Char, Bool, Int64, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Base.StackTraces.StackFrame, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.splice!), Array{Base.StackTraces.StackFrame, 1}, Base.UnitRange{Int64}, Array{Any, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Ptr{Cvoid}, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.unsafe_copyto!), Array{Ptr{Cvoid}, 1}, Int64, Array{Ptr{Cvoid}, 1}, Int64, Int64})
precompile(Tuple{Type{Base.Channel{Any}}, Int64})
precompile(Tuple{typeof(Base._rsearch), String, UInt8, Int64})
precompile(Tuple{typeof(Base._rsearch), String, Char, Int64})
precompile(Tuple{typeof(Base._rsearch), Array{UInt8, 1}, UInt8, Int64})
precompile(Tuple{typeof(Base._rsearchindex), Array{UInt8, 1}, Array{UInt8, 1}, Int64})
precompile(Tuple{typeof(Base._rsearch), Array{UInt8, 1}, Array{UInt8, 1}, Int64})
precompile(Tuple{typeof(Base._rsearch), Array{Int8, 1}, UInt8, Int64})
precompile(Tuple{typeof(Base._rsearchindex), Array{Int8, 1}, Array{UInt8, 1}, Int64})
precompile(Tuple{typeof(Base._rsearch), Array{Int8, 1}, Array{UInt8, 1}, Int64})
precompile(Tuple{typeof(Base._rsearch), Array{UInt8, 1}, Char, Int64})
precompile(Tuple{typeof(Base._rsearch), Array{Int8, 1}, Char, Int64})
precompile(Tuple{typeof(Base.splice!), Array{Base.Multimedia.AbstractDisplay, 1}, Int64, Array{Any, 1}})
precompile(Tuple{typeof(Base.sizehint!), Base.Dict{Symbol, Any}, Int64})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Symbol, 1}, Base.IndexLinear, Array{UInt8, 1}})
precompile(Tuple{getfield(Base, Symbol("#kw##readline")), Array{Any, 1}, typeof(Base.readline), Base.IOStream})
precompile(Tuple{Type{Core.Compiler.Generator{I, F} where F where I}, Type{Core.Compiler.Const}, Tuple{Nothing}})
precompile(Tuple{Type{Core.Compiler.Generator{Tuple{Nothing}, Type{Core.Compiler.Const}}}, Type{Core.Compiler.Const}, Tuple{Nothing}})
precompile(Tuple{typeof(Core.Compiler.convert), Type{Tuple{Nothing}}, Tuple{Nothing}})
precompile(Tuple{typeof(Core.Compiler.collect), Type{Any}, Core.Compiler.Generator{Tuple{Nothing}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler._collect), Type{Any}, Core.Compiler.Generator{Tuple{Nothing}, Type{Core.Compiler.Const}}, Core.Compiler.HasLength})
precompile(Tuple{typeof(Core.Compiler.length), Core.Compiler.Generator{Tuple{Nothing}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler.length), Tuple{Nothing}})
precompile(Tuple{typeof(Core.Compiler.copyto!), Array{Any, 1}, Core.Compiler.Generator{Tuple{Nothing}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler.start), Core.Compiler.Generator{Tuple{Nothing}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler.start), Tuple{Nothing}})
precompile(Tuple{typeof(Core.Compiler.done), Core.Compiler.Generator{Tuple{Nothing}, Type{Core.Compiler.Const}}, Int64})
precompile(Tuple{typeof(Core.Compiler.done), Tuple{Nothing}, Int64})
precompile(Tuple{typeof(Core.Compiler.next), Core.Compiler.Generator{Tuple{Nothing}, Type{Core.Compiler.Const}}, Int64})
precompile(Tuple{typeof(Core.Compiler.next), Tuple{Nothing}, Int64})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Nothing}, Int64})
precompile(Tuple{typeof(Base.join), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{String, 1}, Char})
precompile(Tuple{Type{Core.Compiler.Generator{I, F} where F where I}, Type{Core.Compiler.Const}, Tuple{String, typeof(Base.info)}})
precompile(Tuple{Type{Core.Compiler.Generator{Tuple{String, typeof(Base.info)}, Type{Core.Compiler.Const}}}, Type{Core.Compiler.Const}, Tuple{String, typeof(Base.info)}})
precompile(Tuple{typeof(Core.Compiler.convert), Type{Tuple{String, typeof(Base.info)}}, Tuple{String, typeof(Base.info)}})
precompile(Tuple{typeof(Core.Compiler.collect), Type{Any}, Core.Compiler.Generator{Tuple{String, typeof(Base.info)}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler._collect), Type{Any}, Core.Compiler.Generator{Tuple{String, typeof(Base.info)}, Type{Core.Compiler.Const}}, Core.Compiler.HasLength})
precompile(Tuple{typeof(Core.Compiler.length), Core.Compiler.Generator{Tuple{String, typeof(Base.info)}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler.length), Tuple{String, typeof(Base.info)}})
precompile(Tuple{typeof(Core.Compiler.copyto!), Array{Any, 1}, Core.Compiler.Generator{Tuple{String, typeof(Base.info)}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler.start), Core.Compiler.Generator{Tuple{String, typeof(Base.info)}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler.start), Tuple{String, typeof(Base.info)}})
precompile(Tuple{typeof(Core.Compiler.done), Core.Compiler.Generator{Tuple{String, typeof(Base.info)}, Type{Core.Compiler.Const}}, Int64})
precompile(Tuple{typeof(Core.Compiler.done), Tuple{String, typeof(Base.info)}, Int64})
precompile(Tuple{typeof(Core.Compiler.next), Core.Compiler.Generator{Tuple{String, typeof(Base.info)}, Type{Core.Compiler.Const}}, Int64})
precompile(Tuple{typeof(Core.Compiler.next), Tuple{String, typeof(Base.info)}, Int64})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{String, typeof(Base.info)}, Int64})
precompile(Tuple{typeof(Core.Compiler.start), Tuple{String, Int64}})
precompile(Tuple{typeof(Core.Compiler.start), Tuple{typeof(Base.info), Int64}})
precompile(Tuple{typeof(Core.Compiler.indexed_next), Tuple{typeof(Base.info), Int64}, Int64, Int64})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{typeof(Base.info), Int64}, Int64})
precompile(Tuple{typeof(Base.print), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Base.SubString{String}, Char})
precompile(Tuple{typeof(Base.sizehint!), Base.Dict{Any, Any}, Int64})
precompile(Tuple{typeof(Base.unsafe_copyto!), Array{Base.Dict{Any, Any}, 1}, Int64, Array{Base.Dict{Any, Any}, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Base.Dict{Any, Any}, 1}, Int64, Array{Base.Dict{Any, Any}, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Int64, String, Bool})
precompile(Tuple{typeof(Base.uv_status_string), Base.UDPSocket})
precompile(Tuple{typeof(Base.readuntil), Base.GenericIOBuffer{Array{UInt8, 1}}, UInt8})
precompile(Tuple{typeof(Base.seek), Base.GenericIOBuffer{Array{UInt8, 1}}, Int64})
precompile(Tuple{getfield(Base, Symbol("#kw##readline")), Array{Any, 1}, typeof(Base.readline), Base.GenericIOBuffer{Array{UInt8, 1}}})
precompile(Tuple{typeof(Base.endswith), String, String})
precompile(Tuple{typeof(Base.:(==)), Array{Char, 1}, Array{Char, 1}})
precompile(Tuple{Type{Base.Dict{Any, Any}}, Array{Any, 1}})
precompile(Tuple{typeof(Base.sync_end)})
precompile(Tuple{typeof(Base.wait), Task})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}})
precompile(Tuple{typeof(Base.lock), Base.ReentrantLock})
precompile(Tuple{typeof(Base.unlock), Base.ReentrantLock})
precompile(Tuple{typeof(Base.cmd_gen), Tuple{Tuple{}}})
precompile(Tuple{typeof(Base.extrema), Array{Int64, 1}})
precompile(Tuple{typeof(Base.Sort.sort_int_range!), Array{Int64, 1}, Int64, Int64})
precompile(Tuple{typeof(Core.Compiler.isbits), Base.Sort.QuickSortAlg})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Symbol})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Any, Any}, Symbol, Symbol, Int64})
precompile(Tuple{Type{Base.Dict{Any, Any}}, Base.Pair{Symbol, Symbol}, Base.Pair{Symbol, String}, Base.Pair{Symbol, String}, Base.Pair{Symbol, Base.Cmd}, Base.Pair{Symbol, Bool}})
precompile(Tuple{typeof(Base.listenany), Base.IPv4, UInt16})
precompile(Tuple{typeof(Base.load_juliarc)})
precompile(Tuple{typeof(Base.popfirst!), Array{String, 1}})
precompile(Tuple{typeof(Base.print), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, String, Char})
precompile(Tuple{typeof(Base.read), Base.GenericIOBuffer{Array{UInt8, 1}}, Type{Char}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Char, Any}, Base.Dict{Char, Any}, Char})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Char, Any}, Char})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Char, Any}, Base.Dict{Char, Any}, Char, Int64})
precompile(Tuple{typeof(Base.setdiff), Base.KeySet{Any, Base.Dict{Any, Any}}, Base.KeySet{Any, Base.Dict{Any, Any}}})
precompile(Tuple{Type{Expr}, Symbol, GlobalRef, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue, SSAValue})
precompile(Tuple{typeof(Core.Compiler.isbits), Tuple{String, typeof(Base.info)}})
precompile(Tuple{typeof(Base.:(==)), Nothing, String})
precompile(Tuple{Type{Symbol}, Nothing})
precompile(Tuple{Type{Symbol}, Base.SubString{String}})
precompile(Tuple{typeof(Base.getindex), Type{Base.Dict{Any, Any}}, Base.Dict{Any, Any}, Base.Dict{Any, Any}, Base.Dict{Any, Any}, Base.Dict{Any, Any}, Base.Dict{Any, Any}, Base.Dict{Any, Any}})
precompile(Tuple{typeof(Base.prepend!), Array{Base.Dict{Any, Any}, 1}, Array{Base.Dict{Any, Any}, 1}})
precompile(Tuple{typeof(Core.Compiler.isbits), Array{Base.Multimedia.AbstractDisplay, 1}})
precompile(Tuple{Type{String}, Base.BitArray{1}})
precompile(Tuple{typeof(Core.Compiler.isbits), Tuple{Nothing, Int64}})
precompile(Tuple{typeof(Base.getindex), Type{Base.Dict{Any, Any}}, Base.Dict{Any, Any}, Base.Dict{Any, Any}, Base.Dict{Any, Any}, Base.Dict{Any, Any}, Base.Dict{Any, Any}, Base.Dict{Any, Any}})
precompile(Tuple{typeof(Base.prepend!), Array{Base.Dict{Any, Any}, 1}, Array{Base.Dict{Any, Any}, 1}})
precompile(Tuple{Type{String}, Base.BitArray{1}})
precompile(Tuple{typeof(Base._collect), Array{Ptr{Cvoid}, 1}, Base.Generator{Array{Ptr{Cvoid}, 1}, typeof(Base.StackTraces.lookup)}, Base.EltypeUnknown, Base.HasShape})
precompile(Tuple{typeof(Base.popfirst!), Array{Base.StackTraces.StackFrame, 1}})
precompile(Tuple{typeof(Base.StackTraces.stacktrace), Array{Ptr{Cvoid}, 1}, Bool})
precompile(Tuple{typeof(Base.success), Base.Process})
precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.success), typeof(Base.:(&)), Array{Base.Process, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base.string), Base.Cmd})
precompile(Tuple{typeof(Base.test_success), Base.Process})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.success), typeof(Base.:(&)), Base.IndexLinear, Array{Base.Process, 1}})
precompile(Tuple{typeof(Core.Compiler.isbits), Tuple{String, String, String}})
precompile(Tuple{getfield(Base, Symbol("#kw##shell_escape")), Array{Any, 1}, typeof(Base.shell_escape), Base.Cmd})
precompile(Tuple{typeof(Base.show), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.Cmd})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.Cmd})
precompile(Tuple{typeof(Core.Compiler.isbits), Ptr{Cvoid}})
precompile(Tuple{typeof(Base.cconvert), Type{Ptr{Base.Cstring}}, Ptr{Cvoid}})
precompile(Tuple{typeof(Base.cconvert), Type{Ptr{Base.Cstring}}, Nothing})
precompile(Tuple{typeof(Base.cconvert), Type{Base.Cstring}, Ptr{Cvoid}})
precompile(Tuple{typeof(Base.unsafe_convert), Type{Ptr{Base.Cstring}}, Ptr{Cvoid}})
precompile(Tuple{typeof(Base.unsafe_convert), Type{Ptr{Base.Cstring}}, Base.RefArray{Base.Cstring, Array{Base.Cstring, 1}, Any}})
precompile(Tuple{Type{Base.Process}, Base.Cmd, Ptr{Cvoid}, Base.DevNullStream, Base.DevNullStream, Base.DevNullStream})
precompile(Tuple{getfield(Base, Symbol("#kw##spawn")), Array{Any, 1}, typeof(Base.spawn), Base.Cmd, Tuple{Base.DevNullStream, Base.DevNullStream, Base.DevNullStream}})
precompile(Tuple{typeof(Core.Compiler.isbits), Tuple{Tuple{String}, Tuple{String}, Tuple{String}}})
precompile(Tuple{typeof(Base.cmd_gen), Tuple{Tuple{String}, Tuple{String}, Tuple{String}}})
precompile(Tuple{typeof(Base.append!), Array{String, 1}, Array{Any, 1}})
precompile(Tuple{typeof(Base.exec_options), Base.JLOptions})
precompile(Tuple{typeof(Base.close), Base.IOStream})
precompile(Tuple{typeof(Base._atexit)})
precompile(Tuple{getfield(Base, Symbol("#kw##notify")), Array{Any, 1}, typeof(Base.notify), Base.Condition, Nothing})
precompile(Tuple{typeof(Base.uvfinalize), Base.TTY})
precompile(Tuple{typeof(Base.uv_status_string), Base.TTY})
precompile(Tuple{typeof(Base._fd), Base.TTY})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.TTY})
precompile(Tuple{typeof(Base.unpreserve_handle), Base.TTY})
precompile(Tuple{typeof(Base.isopen), Base.TTY})
precompile(Tuple{typeof(Base.stream_wait), Base.TTY, Base.Condition})
precompile(Tuple{typeof(Base.close), Base.TTY})
precompile(Tuple{typeof(Base.unsafe_store!), Ptr{Int32}, Int64})
precompile(Tuple{typeof(Base.unsafe_write), Base.TTY, Ptr{UInt8}, UInt64})
precompile(Tuple{typeof(Base.unpreserve_handle), Task})
precompile(Tuple{typeof(Base.check_open), Base.TTY})
precompile(Tuple{typeof(Base.stream_wait), Task})
precompile(Tuple{typeof(Base.uv_write), Base.TTY, Ptr{UInt8}, UInt64})
precompile(Tuple{typeof(Base.flush), Base.TTY})
precompile(Tuple{typeof(Base.push!), Array{String, 1}, Base.SubString{String}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Char, Char})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Any, Any}, Char, Char, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Any}, Int64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, String, String})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Any, Any}, String, String, Int64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Nothing, String})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Any, Any}, Nothing, String, Int64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Char, String})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Any, Any}, Char, String, Int64})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Char, Any}, Nothing, Char, Int64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Char, Any}, Nothing, Char})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Nothing}, Nothing, String})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Nothing}, String})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Any, Nothing}, Nothing, String, Int64})
precompile(Tuple{typeof(Core.Compiler.isbits), Tuple{Tuple{}, Nothing}})
precompile(Tuple{typeof(Base.take!), Base.Channel{Any}})
precompile(Tuple{typeof(Base.n_avail), Base.Channel{Any}})
precompile(Tuple{typeof(Base.check_channel_state), Base.Channel{Any}})
precompile(Tuple{typeof(Base.wait_impl), Base.Channel{Any}})
precompile(Tuple{typeof(Base.wait_unbuffered), Base.Channel{Any}})
precompile(Tuple{typeof(Base.wait), Base.Channel{Any}})
precompile(Tuple{typeof(Base.take_unbuffered), Base.Channel{Any}})
precompile(Tuple{typeof(Base.displaysize), Base.TTY})
precompile(Tuple{typeof(Base.divrem), Int64, Int64})
precompile(Tuple{typeof(Base.eof), Base.TTY})
precompile(Tuple{typeof(Base.isreadable), Base.TTY})
precompile(Tuple{typeof(Base.start_reading), Base.TTY})
precompile(Tuple{typeof(Base.wait_readnb), Base.TTY, Int64})
precompile(Tuple{typeof(Base.alloc_buf_hook), Base.TTY, UInt64})
precompile(Tuple{typeof(Base.read), Base.TTY, Type{UInt8}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.deleteat!), Array{UInt8, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.splice!), Array{UInt8, 1}, Base.UnitRange{Int64}, Array{UInt8, 1}})
precompile(Tuple{Type{Base.Libc.TmStruct}, Float64})
precompile(Tuple{typeof(Base.Libc.strftime), String, Base.Libc.TmStruct})
precompile(Tuple{typeof(Base.replace), String, Pair{Base.Regex,String}})
precompile(Tuple{typeof(Base.write), Base.TTY, UInt8})
precompile(Tuple{typeof(Base.unsafe_write), Base.TTY, Base.RefValue{UInt8}, Int64})
precompile(Tuple{typeof(Base.start), Base.Pair{Symbol, Any}})
precompile(Tuple{typeof(Base.print), Base.IOStream, String})
precompile(Tuple{typeof(Base.unsafe_write), Base.IOStream, Ptr{UInt8}, UInt64})
precompile(Tuple{typeof(Base.flush), Base.IOStream})
precompile(Tuple{getfield(Base, Symbol("#kw##parse_input_line")), Array{Any, 1}, typeof(Base.parse_input_line), String})
precompile(Tuple{typeof(Base.put!), Base.Channel{Any}, Tuple{Expr, Int64}})
precompile(Tuple{typeof(Base.put_buffered), Base.Channel{Any}, Tuple{Expr, Int64}})
precompile(Tuple{typeof(Base.put_unbuffered), Base.Channel{Any}, Tuple{Expr, Int64}})
precompile(Tuple{typeof(Base.put!), Base.Channel{Any}, Tuple{Int64, Nothing}})
precompile(Tuple{typeof(Base.put_buffered), Base.Channel{Any}, Tuple{Int64, Nothing}})
precompile(Tuple{typeof(Base.put_unbuffered), Base.Channel{Any}, Tuple{Int64, Nothing}})
precompile(Tuple{typeof(Base.start), Tuple{Int64, Nothing}})
precompile(Tuple{typeof(Base.Multimedia.display), Int64})
precompile(Tuple{typeof(Core.Compiler.isbits), Base.MIME{Symbol("text/plain")}})
precompile(Tuple{typeof(Core.Compiler.isbits), Tuple{typeof(Base.Multimedia.display), typeof(Base.show)}})
precompile(Tuple{Type{Base.MIME{Symbol("text/plain")}}})
precompile(Tuple{typeof(Base.start), Base.Pair{Any, Any}})
precompile(Tuple{getfield(Base, Symbol("#kw##parse")), Array{Any, 1}, typeof(Base.parse), String})
precompile(Tuple{typeof(Base._rsearch), String, Array{Char, 1}, Int64})
precompile(Tuple{typeof(Core.Compiler.isbits), Tuple{Nothing, Nothing, Nothing}})
precompile(Tuple{typeof(Base.isidentifier), Base.SubString{String}})
precompile(Tuple{typeof(Core.Compiler.isbits), Tuple{Bool, Nothing, Nothing}})
precompile(Tuple{typeof(Base.Filesystem.readdir), String})
precompile(Tuple{typeof(Base.cmp), String, Base.SubString{String}})
precompile(Tuple{typeof(Base.skip_deleted), Base.Dict{String, Nothing}, Int64})
precompile(Tuple{typeof(Base.PCRE.exec), Ptr{Cvoid}, String, UInt32, UInt32, Ptr{Cvoid}})
precompile(Tuple{typeof(Base.PCRE.exec), Ptr{Cvoid}, String, UInt64, UInt32, Ptr{Cvoid}})
precompile(Tuple{typeof(Base.nextind), String, UInt64})
precompile(Tuple{typeof(Base.matchall), Base.Regex, String, Bool})
precompile(Tuple{typeof(Base.skip_deleted), Base.Dict{String, String}, Int64})
precompile(Tuple{typeof(Base.reverse), String})
precompile(Tuple{typeof(Core.Compiler.length), Tuple{Core.Compiler.PartialTypeVar}})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Core.Compiler.PartialTypeVar}, Int64})
precompile(Tuple{typeof(Base.show_delim_array), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Any, 1}, Char, Char, Char, Bool, Int64, Int64})
precompile(Tuple{typeof(Base.join), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Any, 1}, String, String})
precompile(Tuple{typeof(Base.join), Base.GenericIOBuffer{Array{UInt8, 1}}, Tuple{}, String, String})
precompile(Tuple{typeof(Base.show_method_params), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{Any, 1}})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Module})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Symbol, String, Int32})
precompile(Tuple{typeof(Base.reverseind), String, Int64})
precompile(Tuple{typeof(Base.Pkg.Dir.path)})
precompile(Tuple{typeof(Base.promote_type), Type{String}, Type{Union{}}})
precompile(Tuple{typeof(Base.promote_type), Type{Any}, Type{String}})
precompile(Tuple{typeof(Base.promote_rule), Type{Any}, Type{String}})
precompile(Tuple{typeof(Base.promote_rule), Type{String}, Type{Any}})
precompile(Tuple{typeof(Base.promote_result), Type{Any}, Type{String}, Type{Union{}}, Type{Union{}}})
precompile(Tuple{typeof(Base.promote_type), Type{String}, Type{Any}})
precompile(Tuple{typeof(Base.promote_result), Type{String}, Type{Any}, Type{Union{}}, Type{Union{}}})
precompile(Tuple{typeof(Base.cat_indices), String, Int64})
precompile(Tuple{typeof(Base.cat_size), String, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Any, 1}, String, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base._cat), Array{Any, 1}, Tuple{Int64}, Tuple{Bool}, String, Array{Any, 1}, String})
precompile(Tuple{typeof(Base.cat_t), Base.Val{1}, Type{Any}, String, Array{Any, 1}, String})
precompile(Tuple{typeof(Base.Sort.searchsortedfirst), Array{String, 1}, String, Int64, Int64, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.Sort.searchsortedlast), Array{String, 1}, String, Int64, Int64, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.Sort.searchsorted), Array{String, 1}, String, Int64, Int64, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.Sort.searchsorted), Array{String, 1}, String, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.throw_boundserror), Array{String, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Core.Compiler.precise_container_type), String, Core.Compiler.Const, Array{Any, 1}, Core.Compiler.InferenceState})
precompile(Tuple{typeof(Base._rsearchindex), String, String, Int64})
precompile(Tuple{typeof(Base.deleteat!), Array{Symbol, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.copyto!), Array{String, 1}, Base.Generator{Array{Symbol, 1}, typeof(Base.string)}})
precompile(Tuple{typeof(Base.deleteat!), Array{String, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{String, Nothing}, String})
precompile(Tuple{typeof(Base.push!), Base.Set{String}, String})
precompile(Tuple{typeof(Base.isstructtype), DataType})
precompile(Tuple{typeof(Base.start), Array{Int64, 1}})
precompile(Tuple{typeof(Base.to_tuple_type), Type{Tuple}})
precompile(Tuple{typeof(Base.append!), Array{Any, 1}, Array{Any, 1}})
precompile(Tuple{typeof(Core.Compiler.isbits), Tuple{DataType, Bool}})
precompile(Tuple{typeof(Base.is_default_method), Method})
precompile(Tuple{getfield(Base, Symbol("#kw##show")), Array{Any, 1}, typeof(Base.show), Base.GenericIOBuffer{Array{UInt8, 1}}, Method})
precompile(Tuple{typeof(Base.sort!), Array{String, 1}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{String, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{String, Nothing}, String})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{String, Nothing}, Nothing, String, Int64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, Nothing}, Nothing, String})
precompile(Tuple{typeof(Base.Filesystem.realpath), Base.SubString{String}})
precompile(Tuple{typeof(Base.Filesystem.readdir), Base.SubString{String}})
precompile(Tuple{typeof(Base.Filesystem.expanduser), String})
precompile(Tuple{typeof(Base.in), Char, Array{Any, 1}})
precompile(Tuple{typeof(Base.string), Char, Char})
precompile(Tuple{typeof(Base.unique), Array{String, 1}})
precompile(Tuple{typeof(Base.incomplete_tag), Symbol})
precompile(Tuple{typeof(Base._rsearch), String, String, Int64})
precompile(Tuple{typeof(Base.pushfirst!), Array{Base.SubString{String}, 1}, Base.SubString{String}})
precompile(Tuple{typeof(Base.startswith), String, Base.SubString{String}})
precompile(Tuple{typeof(Base._rsearch), String, Array{Char, 1}})
precompile(Tuple{getfield(Base, Symbol("#kw##rsplit")), Array{Any, 1}, typeof(Base.rsplit), String, String})
precompile(Tuple{typeof(Base.sort!), Array{String, 1}, Base.Sort.MergeSortAlg, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.sort!), Array{String, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.sort!), Array{String, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.ForwardOrdering, Array{String, 1}})
precompile(Tuple{typeof(Base.start), Tuple{Array{String, 1}, String, Bool}})
precompile(Tuple{typeof(Base.indexed_next), Tuple{Array{String, 1}, String, Bool}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{String, 1}, typeof(Base.length)}, Int64, Int64})
precompile(Tuple{typeof(Base._collect), Array{String, 1}, Base.Generator{Array{String, 1}, typeof(Base.length)}, Base.EltypeUnknown, Base.HasShape})
precompile(Tuple{typeof(Base.write), Base.TTY, Char})
precompile(Tuple{typeof(Base.peek), Base.GenericIOBuffer{Array{UInt8, 1}}})
precompile(Tuple{typeof(Core.Compiler.length), Tuple{Core.Compiler.Const, Core.Compiler.Const, Core.Compiler.Const, DataType}})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Core.Compiler.Const, Core.Compiler.Const, Core.Compiler.Const, DataType}, Int64})
precompile(Tuple{typeof(Base.copy), Base.GenericIOBuffer{Array{UInt8, 1}}})
precompile(Tuple{typeof(Base.getindex), Base.Dict{Symbol, Any}, Symbol})
precompile(Tuple{typeof(Core.Compiler.length), Tuple{Core.Compiler.Const, Core.Compiler.Const, DataType}})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Core.Compiler.Const, Core.Compiler.Const, DataType}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Symbol, Base.Docs.DocStr}, Symbol})
precompile(Tuple{getfield(Core, Symbol("#@doc")), Symbol})
precompile(Tuple{typeof(Base.Docs.docm), LineNumberNode, Module, Symbol})
precompile(Tuple{typeof(Base.vcat), Array{Function, 1}, Array{Function, 1}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{String, String}, String})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Symbol, Tuple{String, String}}, Symbol})
precompile(Tuple{typeof(Base.print), Base.TTY, Char, Char})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{String, String}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{String, String}, String})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{String, String}, String, String, Int64})
precompile(Tuple{typeof(Core.Compiler.isbits), Base.Dict{String, String}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, String}, String, String})
precompile(Tuple{typeof(Base.print), Base.TTY, String})
precompile(Tuple{typeof(Base.print), Base.TTY, Char})
precompile(Tuple{typeof(Base.print), Base.TTY, String, Char})
precompile(Tuple{typeof(Base.mapreduce_impl), typeof(Base.identity), typeof(Base.:(+)), Array{Int64, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._mapreduce), typeof(Base.identity), typeof(Base.:(+)), Base.IndexLinear, Array{Int64, 1}})
precompile(Tuple{typeof(Base.popfirst!), Array{Char, 1}})
precompile(Tuple{typeof(Core.Compiler.isbits), Tuple{Array{String, 1}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, typeof(Base.names), Array{Any, 1}})
precompile(Tuple{typeof(Base._collect), Array{Any, 1}, Base.Generator{Array{Any, 1}, typeof(Base.names)}, Base.EltypeUnknown, Base.HasShape})
precompile(Tuple{typeof(Base.collect_to!), Array{Array{Symbol, 1}, 1}, Base.Generator{Array{Any, 1}, typeof(Base.names)}, Int64, Int64})
precompile(Tuple{typeof(Base.names), Module})
precompile(Tuple{typeof(Base.vcat), Array{Symbol, 1}, Array{Symbol, 1}, Array{Symbol, 1}, Array{String, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Symbol, 2}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.unsafe_copyto!), Array{Symbol, 2}, Int64, Array{Symbol, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.promote_eltype), Array{Symbol, 1}, Array{Symbol, 1}, Array{Symbol, 1}, Array{String, 1}})
precompile(Tuple{typeof(Base.promote_eltype), Array{Symbol, 1}, Array{String, 1}})
precompile(Tuple{typeof(Base.promote_eltype), Array{String, 1}})
precompile(Tuple{typeof(Base.promote_type), Type{Symbol}, Type{String}})
precompile(Tuple{typeof(Base.promote_rule), Type{Symbol}, Type{String}})
precompile(Tuple{typeof(Base.promote_rule), Type{String}, Type{Symbol}})
precompile(Tuple{typeof(Base.promote_result), Type{Symbol}, Type{String}, Type{Union{}}, Type{Union{}}})
precompile(Tuple{typeof(Base.typed_vcat), Type{Any}, Array{Symbol, 1}, Array{Symbol, 1}, Array{Symbol, 1}, Array{String, 1}})
precompile(Tuple{typeof(Base.setindex!), Array{Any, 1}, Array{Symbol, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.setindex!), Array{Any, 1}, Array{String, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.throw_setindex_mismatch), Array{String, 1}, Tuple{Int64}})
precompile(Tuple{typeof(Base.setindex_shape_check), Array{String, 1}, Int64})
precompile(Tuple{typeof(Base.unique), Array{Any, 1}})
precompile(Tuple{typeof(Base.getindex), Type{Symbol}, Symbol})
precompile(Tuple{Type{Base.Set{Symbol}}, Tuple{Symbol}})
precompile(Tuple{typeof(Base.union!), Base.Set{Symbol}, Tuple{Symbol}})
precompile(Tuple{typeof(Base.unique_from), Array{Any, 1}, Array{Symbol, 1}, Base.Set{Symbol}, Int64})
precompile(Tuple{typeof(Base.convert), Type{Base.Set{Any}}, Base.Set{Symbol}})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Any, Nothing}, Symbol})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Any, Nothing}, Nothing, Symbol, Int64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Nothing}, Nothing, Symbol})
precompile(Tuple{typeof(Base.union!), Base.Set{Any}, Base.Set{Symbol}})
precompile(Tuple{typeof(Base.convert), Type{Array{Any, 1}}, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Any, 1}, Base.IndexLinear, Array{Symbol, 1}})
precompile(Tuple{typeof(Base.:(==)), String, Symbol})
precompile(Tuple{typeof(Base.unique_from), Array{Any, 1}, Array{Any, 1}, Base.Set{Any}, Int64})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, typeof(Base.string), Array{Any, 1}})
precompile(Tuple{typeof(Base._collect), Array{Any, 1}, Base.Generator{Array{Any, 1}, typeof(Base.string)}, Base.EltypeUnknown, Base.HasShape})
precompile(Tuple{typeof(Base.similar), Array{Any, 1}, Type{String}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.collect_to!), Array{String, 1}, Base.Generator{Array{Any, 1}, typeof(Base.string)}, Int64, Int64})
precompile(Tuple{typeof(Base.length), Tuple{DataType, DataType}})
precompile(Tuple{Type{BoundsError}, Array{Int64, 2}, Tuple{Base.UnitRange{Int64}, Int64}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Int64, 2}, Tuple{Base.UnitRange{Int64}, Int64}})
precompile(Tuple{getfield(Base.Cartesian, Symbol("#@nexprs")), Int64, Expr})
precompile(Tuple{typeof(Core.Compiler.builtin_tfunction), typeof(===), Array{Any, 1}, Core.Compiler.InferenceState, Core.Compiler.Params})
precompile(Tuple{typeof(Core.Compiler.typeinf_frame), Core.MethodInstance, Bool, Bool, Core.Compiler.Params})
precompile(Tuple{typeof(Core.Compiler.typeinf), Core.Compiler.InferenceState})
precompile(Tuple{typeof(Base.Cartesian.inlineanonymous), Expr, Int64})
precompile(Tuple{typeof(Base.Cartesian.lreplace), Expr, Symbol, Int64})
precompile(Tuple{typeof(Base.copy), Expr})
precompile(Tuple{typeof(Base.copy_exprargs), Array{Any, 1}})
precompile(Tuple{typeof(Base.collect), Type{Any}, Base.Generator{Array{Any, 1}, typeof(Base.copy_exprs)}})
precompile(Tuple{typeof(Base._collect), Type{Any}, Base.Generator{Array{Any, 1}, typeof(Base.copy_exprs)}, Base.HasShape})
precompile(Tuple{typeof(Base.copyto!), Array{Any, 1}, Base.Generator{Array{Any, 1}, typeof(Base.copy_exprs)}})
precompile(Tuple{typeof(Base.next), Base.Generator{Array{Any, 1}, typeof(Base.copy_exprs)}, Int64})
precompile(Tuple{typeof(Base.copy_exprs), Expr})
precompile(Tuple{typeof(Base.Cartesian.lreplace!), Expr, Base.Cartesian.LReplace{String}})
precompile(Tuple{typeof(Base.Cartesian.lreplace!), Symbol, Base.Cartesian.LReplace{String}})
precompile(Tuple{typeof(Base.Cartesian.lreplace!), String, Base.Cartesian.LReplace{String}})
precompile(Tuple{typeof(Base.Cartesian.exprresolve), Expr})
precompile(Tuple{Type{BoundsError}, Array{Expr, 1}, Base.UnitRange{Int64}})
precompile(Tuple{getfield(Base.Cartesian, Symbol("#@ncall")), Int64, Symbol, Symbol})
precompile(Tuple{typeof(Base.getindex), Tuple{Symbol}, Base.UnitRange{Int64}})
precompile(Tuple{getfield(Base.Cartesian, Symbol("#@ncall")), Int64, Symbol, Symbol, Expr})
precompile(Tuple{typeof(Base.lastindex), Tuple{Symbol, Expr}})
precompile(Tuple{typeof(Base.getindex), Tuple{Symbol, Expr}, Base.UnitRange{Int64}})
precompile(Tuple{getfield(Base.Cartesian, Symbol("#@nloops")), Int64, Symbol, Expr, Expr})
precompile(Tuple{typeof(Base.lastindex), Tuple{Expr}})
precompile(Tuple{typeof(Base.lastindex), Tuple{Symbol, Symbol, Symbol}})
precompile(Tuple{typeof(Base.getindex), Tuple{Symbol, Symbol, Symbol}, Base.UnitRange{Int64}})
precompile(Tuple{Type{Expr}, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol})
precompile(Tuple{typeof(Base.join), Base.GenericIOBuffer{Array{UInt8, 1}}, Tuple{String, String}, Char})
precompile(Tuple{typeof(Base.dims2string), Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.throw_setindex_mismatch), Base.UnitRange{Int64}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.setindex_shape_check), Base.UnitRange{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Int64, 2}, Base.UnitRange{Int64}, Base.UnitRange{Int64}, Int64})
precompile(Tuple{Type{BoundsError}, Array{Int64, 2}, Tuple{Int64, Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{Int64, 2}, Tuple{Int64, Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base._unsafe_setindex!), Base.IndexLinear, Array{Int64, 2}, Base.UnitRange{Int64}, Int64, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Core.Compiler.copy_exprargs), Array{Any, 1}})
precompile(Tuple{typeof(Core.Compiler.copy), Expr})
precompile(Tuple{typeof(Core.Compiler.copyto!), Array{Any, 1}, Core.Compiler.Generator{Array{Any, 1}, typeof(Core.Compiler.copy_exprs)}})
precompile(Tuple{typeof(Core.Compiler._widen_all_consts!), Expr, Array{Bool, 1}})
precompile(Tuple{typeof(Core.Compiler.promote_type), Type{Float16}, Type{Int64}})
precompile(Tuple{typeof(Core.Compiler.mk_tuplecall), Array{Any, 1}, Core.Compiler.InferenceState})
precompile(Tuple{typeof(Core.Compiler.annotate_slot_load!), Expr, Array{Any, 1}, Core.Compiler.InferenceState, Array{Bool, 1}})
precompile(Tuple{typeof(Core.Compiler.record_slot_assign!), Core.Compiler.InferenceState})
precompile(Tuple{typeof(Core.Compiler.type_annotate!), Core.Compiler.InferenceState})
precompile(Tuple{typeof(Core.Compiler.inlining_pass!), Core.Compiler.InferenceState})
precompile(Tuple{typeof(Core.Compiler.alloc_elim_pass!), Core.Compiler.InferenceState})
precompile(Tuple{typeof(Core.Compiler.popmeta!), Array{Any, 1}, Symbol})
precompile(Tuple{typeof(Core.Compiler.widen_all_consts!), CodeInfo})
precompile(Tuple{typeof(Core.Compiler.stupdate!), Array{Any, 1}, Array{Any, 1}})
precompile(Tuple{typeof(Core.Compiler.push!), Core.Compiler.BitSet, Int64})
precompile(Tuple{typeof(Core.Compiler.abstract_eval_call), Expr, Array{Any, 1}, Core.Compiler.InferenceState})
precompile(Tuple{typeof(Core.Compiler.return_type_tfunc), Array{Any, 1}, Array{Any, 1}, Core.Compiler.InferenceState})
precompile(Tuple{typeof(Core.Compiler.abstract_call), typeof(===), Tuple{}, Array{Any, 1}, Array{Any, 1}, Core.Compiler.InferenceState})
precompile(Tuple{typeof(Core.Compiler.abstract_call), typeof(===), Array{Any, 1}, Array{Any, 1}, Array{Any, 1}, Core.Compiler.InferenceState})
precompile(Tuple{typeof(Core.Compiler.type_too_complex), TypeVar, Int64})
precompile(Tuple{typeof(Core.Compiler.abstract_eval), Expr, Array{Any, 1}, Core.Compiler.InferenceState})
precompile(Tuple{typeof(Core.Compiler._setint!), Core.Compiler.BitSet, Int64, Bool})
precompile(Tuple{typeof(Core.Compiler.stupdate1!), Array{Any, 1}, Core.Compiler.StateUpdate})
precompile(Tuple{typeof(Core.Compiler.optimize), Core.Compiler.InferenceState})
precompile(Tuple{typeof(Core.Compiler.deleteat!), Core.Compiler.BitArray{1}, Core.Compiler.UnitRange{Int64}})
precompile(Tuple{typeof(Core.Compiler.resize!), Core.Compiler.BitArray{1}, Int64})
precompile(Tuple{typeof(Core.Compiler.copy_chunks!), Array{UInt64, 1}, Int64, Array{UInt64, 1}, Int64, Int64})
precompile(Tuple{typeof(Core.Compiler.copy_chunks_rtol!), Array{UInt64, 1}, Int64, Int64, Int64})
precompile(Tuple{typeof(Core.Compiler.find_ssavalue_uses), Array{Any, 1}})
precompile(Tuple{typeof(Base.sortperm), Array{Tuple{Float64, Int64}, 1}})
precompile(Tuple{Type{Base.Order.Perm{O, V} where V<:(AbstractArray{T, 1} where T) where O<:Base.Order.Ordering}, Base.Order.ForwardOrdering, Array{Tuple{Float64, Int64}, 1}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Order.ForwardOrdering, Array{Tuple{Float64, Int64}, 1}}})
precompile(Tuple{typeof(Base.isequal), Float64, Float64})
precompile(Tuple{typeof(Base.isequal), Int64, Float64})
precompile(Tuple{typeof(Base.isequal), Float64, Int64})
precompile(Tuple{typeof(Base.isless), Int64, Float64})
precompile(Tuple{typeof(Base.isless), Float64, Int64})
precompile(Tuple{typeof(Base.isless), Tuple{Float64, Int64}, Tuple{Float64, Int64}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.Perm{Base.Order.ForwardOrdering, Array{Tuple{Float64, Int64}, 1}}})
precompile(Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.Perm{Base.Order.ForwardOrdering, Array{Tuple{Float64, Int64}, 1}}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.QuickSortAlg, Base.Order.Perm{Base.Order.ForwardOrdering, Array{Tuple{Float64, Int64}, 1}}})
precompile(Tuple{typeof(Base.getindex), Array{String, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{String, 1}, Tuple{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.throw_checksize_error), Array{String, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base._unsafe_getindex), Base.IndexLinear, Array{String, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.reverse), Array{String, 1}})
precompile(Tuple{typeof(Base.reverse), Array{String, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Base.Docs.Binding, String, String, String, Char})
precompile(Tuple{typeof(Base.show_method_table), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.MethodList, Int64, Bool})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.MethodList})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Base.MethodList, String, Char})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, String, String, DataType, String, DataType, Char})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, DataType, Char})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, typeof(Type), Char})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Module, String, Char})
precompile(Tuple{typeof(Base.Pkg.dir), String, String})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Any, Any}, Array{Base.Docs.DocStr, 1}, Symbol, Int64})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Any, Any}, Base.Docs.Binding, Symbol, Int64})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Any, Any}, Type{Union{}}, Symbol, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Union{DataType, typeof(Type)}, Nothing}, typeof(Type)})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Union{DataType, typeof(Type)}, Nothing}, Nothing, typeof(Type), Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Union{DataType, typeof(Type)}, Nothing}, DataType})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Union{DataType, typeof(Type)}, Nothing}, Nothing, DataType, Int64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Union{DataType, typeof(Type)}, Nothing}, Nothing, DataType})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Union{DataType, typeof(Type)}, Nothing}, Nothing, typeof(Type)})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Union{DataType, typeof(Type)}, Nothing}, Int64})
precompile(Tuple{typeof(Base.isempty), Array{Int64, 1}})
precompile(Tuple{typeof(Base.Iterators.zip), Array{Int64, 1}, SimpleVector})
precompile(Tuple{typeof(Base.Iterators.zip), Array{Symbol, 1}, SimpleVector})
precompile(Tuple{typeof(Base.start), Base.Iterators.Zip2{Array{Int64, 1}, SimpleVector}})
precompile(Tuple{typeof(Base.start), Base.Iterators.Zip2{Array{Symbol, 1}, SimpleVector}})
precompile(Tuple{typeof(Base.done), Base.Iterators.Zip2{Array{Int64, 1}, SimpleVector}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.done), Base.Iterators.Zip2{Array{Symbol, 1}, SimpleVector}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.next), Base.Iterators.Zip2{Array{Int64, 1}, SimpleVector}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.next), Base.Iterators.Zip2{Array{Symbol, 1}, SimpleVector}, Tuple{Int64, Int64}})
precompile(Tuple{typeof(Base.println), Base.GenericIOBuffer{Array{UInt8, 1}}, DataType})
precompile(Tuple{typeof(Base.println), Base.GenericIOBuffer{Array{UInt8, 1}}, typeof(Type)})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Array{Base.Docs.DocStr, 1}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Base.Docs.Binding, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Type{Union{}}, Symbol})
precompile(Tuple{typeof(Base.Docs.aliasof), Base.Docs.Binding})
precompile(Tuple{typeof(Base.haskey), Base.IdDict, Base.Docs.Binding})
precompile(Tuple{typeof(Base.getindex), Base.IdDict, Base.Docs.Binding})
precompile(Tuple{typeof(Base.push!), Array{Base.Docs.MultiDoc, 1}, Base.Docs.MultiDoc})
precompile(Tuple{typeof(Base.start), Array{Type{T} where T, 1}})
precompile(Tuple{typeof(Base.done), Array{Type{T} where T, 1}, Int64})
precompile(Tuple{typeof(Base.next), Array{Type{T} where T, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Base.IdDict, Type{Tuple{Any}}})
precompile(Tuple{typeof(Base.push!), Array{Base.Docs.DocStr, 1}, Base.Docs.DocStr})
precompile(Tuple{typeof(Core.Compiler.length), Tuple{DataType, Core.Compiler.Const, DataType}})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{DataType, Core.Compiler.Const, DataType}, Int64})
precompile(Tuple{typeof(Base.replace), String, Pair{String,String}})
precompile(Tuple{typeof(Base.pop!), Array{Base.SubString{String}, 1}})
precompile(Tuple{typeof(Base.union!), Base.Set{Char}, String})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Char, Nothing}, Char})
precompile(Tuple{typeof(Base.issubset), Base.SubString{String}, Base.Set{Char}})
precompile(Tuple{typeof(Core.Compiler.length), Tuple{Core.Compiler.Const, Core.Compiler.Const, Core.Compiler.Const, Core.Compiler.Const, Core.Compiler.Const}})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Core.Compiler.Const, Core.Compiler.Const, Core.Compiler.Const, Core.Compiler.Const, Core.Compiler.Const}, Int64})
precompile(Tuple{typeof(Base.throw_boundserror), Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}, true}, Tuple{Int64}})
precompile(Tuple{typeof(Base.peek), Base.GenericIOBuffer{Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}, true}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Module, Symbol})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Any, Any}, Module, Symbol, Int64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, String, Symbol})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Any, Any}, String, Symbol, Int64})
precompile(Tuple{typeof(Base.getindex), Array{AbstractString, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.throw_boundserror), Array{AbstractString, 1}, Tuple{Base.UnitRange{Int64}}})
precompile(Tuple{typeof(Base.unsafe_copyto!), Array{AbstractString, 1}, Int64, Array{AbstractString, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.start), Array{AbstractString, 1}})
precompile(Tuple{typeof(Base.done), Array{AbstractString, 1}, Int64})
precompile(Tuple{typeof(Base.replace), String, Pair{Base.Regex,String}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Base.Cmd, Symbol})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Any, Any}, Base.Cmd, Symbol, Int64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Bool, Symbol})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Any, Any}, Bool, Symbol, Int64})
precompile(Tuple{typeof(Base.merge!), Base.Dict{Any, Any}, Base.Dict{Any, Any}, Base.Dict{Any, Any}})
precompile(Tuple{Type{Symbol}, Symbol})
precompile(Tuple{typeof(Core.Compiler.mk_getfield), TypedSlot, Int64, Type{String}})
precompile(Tuple{getfield(Core, Symbol("#kw#Type")), Array{Any, 1}, Type{Base.Cmd}, Base.Cmd})
precompile(Tuple{typeof(Base.uv_status_string), Base.PipeEndpoint})
precompile(Tuple{typeof(Base._fd), Base.PipeEndpoint})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.PipeEndpoint})
precompile(Tuple{typeof(Base.unpreserve_handle), Base.PipeEndpoint})
precompile(Tuple{typeof(Base.isopen), Base.PipeEndpoint})
precompile(Tuple{typeof(Base.stream_wait), Base.PipeEndpoint, Base.Condition})
precompile(Tuple{typeof(Base.close), Base.PipeEndpoint})
precompile(Tuple{getfield(Base, Symbol("#kw##setenv")), Array{Any, 1}, typeof(Base.setenv), Base.Cmd})
precompile(Tuple{typeof(Base.julia_cmd), String})
precompile(Tuple{typeof(Base.cmd_gen), Tuple{Tuple{String}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}, Tuple{String, String}}})
precompile(Tuple{typeof(Base.arg_gen), String, String})
precompile(Tuple{typeof(Base.cmd_gen), Tuple{Tuple{Base.Cmd}, Tuple{Base.Cmd}, Tuple{String}, Tuple{Base.Cmd}, Tuple{String}, Tuple{String}}})
precompile(Tuple{typeof(Base.arg_gen), Base.Cmd})
precompile(Tuple{typeof(Base.promote_type), Type{Bool}, Type{UInt8}})
precompile(Tuple{typeof(Base.promote_rule), Type{UInt8}, Type{Bool}})
precompile(Tuple{typeof(Base.promote_result), Type{Bool}, Type{UInt8}, Type{UInt8}, Type{Union{}}})
precompile(Tuple{typeof(Base.promote_type), Type{UInt8}, Type{Union{}}})
precompile(Tuple{typeof(Base.detach), Base.Cmd})
precompile(Tuple{typeof(Base.open), Base.CmdRedirect, String, Base.DevNullStream})
precompile(Tuple{typeof(Base.spawn), Base.CmdRedirect, Tuple{Base.DevNullStream, Base.Pipe, Base.IOStream}})
precompile(Tuple{getfield(Base, Symbol("#kw##spawn")), Array{Any, 1}, typeof(Base.spawn), Base.Cmd, Tuple{Base.DevNullStream, Base.Pipe, Base.IOStream}})
precompile(Tuple{getfield(Base, Symbol("#kw##init_pipe!")), Array{Any, 1}, typeof(Base.init_pipe!), Base.PipeEndpoint})
precompile(Tuple{typeof(Base._link_pipe), Ptr{Cvoid}, Ptr{Cvoid}})
precompile(Tuple{typeof(Base.link_pipe), Base.PipeEndpoint, Bool, Base.PipeEndpoint, Bool})
precompile(Tuple{typeof(Base.close), Base.Filesystem.File})
precompile(Tuple{typeof(Base.setup_stdio), Base.Pipe, Bool})
precompile(Tuple{typeof(Base.setup_stdio), Base.IOStream, Bool})
precompile(Tuple{Type{Base.Process}, Base.Cmd, Ptr{Cvoid}, Base.DevNullStream, Base.Pipe, Base.IOStream})
precompile(Tuple{typeof(Base._jl_spawn), String, Array{String, 1}, Ptr{Cvoid}, Base.Process, Base.DevNullStream, Base.PipeEndpoint, Base.Filesystem.File})
precompile(Tuple{Type{Base.Timer}, Int64})
precompile(Tuple{typeof(Base.sleep), Int64})
precompile(Tuple{typeof(Base._uv_hook_close), Base.PipeEndpoint})
precompile(Tuple{typeof(Base.eltype), Type{Base.Union{IO, Nothing}}})
precompile(Tuple{Type{Base.Union{IO, Nothing}}})
precompile(Tuple{typeof(Base.eltype), Type{Base.Union{AbstractString, Nothing}}})
precompile(Tuple{Type{Base.Union{AbstractString, Nothing}}})
precompile(Tuple{typeof(Base.eltype), Type{Base.Union{Integer, Nothing}}})
precompile(Tuple{Type{Base.Union{Integer, Nothing}}})
precompile(Tuple{typeof(Base.eltype), Type{Base.Union{Int64, Symbol, Nothing}}})
precompile(Tuple{Type{Base.Union{Int64, Symbol, Nothing}}})
precompile(Tuple{typeof(Base.eltype), Type{Base.Union{Base.Cmd, Nothing}}})
precompile(Tuple{Type{Base.Union{Base.Cmd, Nothing}}})
precompile(Tuple{typeof(Base.eltype), Type{Base.Union{Some{Any}, Nothing}}})
precompile(Tuple{Type{Base.Union{Some{Any}, Nothing}}})
precompile(Tuple{typeof(Base.eltype), Type{Base.Union{Bool, Nothing}}})
precompile(Tuple{Type{Base.Union{Bool, Nothing}}})
precompile(Tuple{typeof(Base.eltype), Type{Base.Union{Base.Process, Nothing}}})
precompile(Tuple{Type{Base.Union{Base.Process, Nothing}}})
precompile(Tuple{typeof(Base.eltype), Type{Base.Union{Base.Dict{K, V}, Nothing} where V where K}})
precompile(Tuple{Type{Base.Union{Base.Dict{K, V}, Nothing} where V where K}})
precompile(Tuple{typeof(Base.eltype), Type{Base.Union{Array{T, N}, Nothing} where N where T}})
precompile(Tuple{Type{Base.Union{Array{T, N}, Nothing} where N where T}})
precompile(Tuple{typeof(Base.convert), Type{Base.Union{Base.Process, Nothing}}, Base.Process})
precompile(Tuple{typeof(Base.convert), Type{Base.Union{Bool, Nothing}}, Bool})
precompile(Tuple{typeof(Base.task_done_hook), Task})
precompile(Tuple{typeof(Base.getindex), Tuple{Array{Any, 1}, Tuple{}}, Int64})
precompile(Tuple{Type{Base.TCPSocket}})
precompile(Tuple{typeof(Base.getsockname), Base.TCPSocket})
precompile(Tuple{typeof(Base.unsafe_store!), Ptr{Int32}, Int64})
precompile(Tuple{Type{Base.Multimedia.TextDisplay}, Base.PipeEndpoint})
precompile(Tuple{typeof(Core.Compiler.isbits), OutOfMemoryError})
precompile(Tuple{typeof(Core.Compiler.isbits), Tuple{Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64, Int64}})
precompile(Tuple{typeof(Base.getaddrinfo), String})
precompile(Tuple{typeof(Base.uv_status_string), Base.PipeEndpoint})
precompile(Tuple{typeof(Base._fd), Base.PipeEndpoint})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.PipeEndpoint})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, UInt16})
precompile(Tuple{typeof(Base.isopen), Base.PipeEndpoint})
precompile(Tuple{typeof(Base.unpreserve_handle), Task})
precompile(Tuple{typeof(Base.check_open), Base.PipeEndpoint})
precompile(Tuple{typeof(Base.stream_wait), Task})
precompile(Tuple{typeof(Base.uv_write), Base.PipeEndpoint, Ptr{UInt8}, UInt64})
precompile(Tuple{typeof(Base.flush), Base.PipeEndpoint})
precompile(Tuple{typeof(Base.unsafe_write), Base.PipeEndpoint, Ptr{UInt8}, UInt64})
precompile(Tuple{typeof(Base.unsafe_write), Base.PipeEndpoint, Base.RefValue{UInt8}, Int64})
precompile(Tuple{typeof(Base.uv_status_string), Base.TCPSocket})
precompile(Tuple{typeof(Base._fd), Base.TCPSocket})
precompile(Tuple{typeof(Base.print), Base.PipeEndpoint, String})
precompile(Tuple{typeof(Base.print), Base.PipeEndpoint, Char})
precompile(Tuple{typeof(Base.print), Base.PipeEndpoint, String, Char})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.TCPSocket})
precompile(Tuple{typeof(Base.write), Base.PipeEndpoint, Char})
precompile(Tuple{typeof(Base.isopen), Base.TCPSocket})
precompile(Tuple{typeof(Base.unpreserve_handle), Base.TCPSocket})
precompile(Tuple{typeof(Base.check_open), Base.TCPSocket})
precompile(Tuple{typeof(Base.stream_wait), Base.TCPSocket, Base.Condition})
precompile(Tuple{typeof(Base.wait_connected), Base.TCPSocket})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Base.IPv4, String})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Base.IPv6, String})
precompile(Tuple{typeof(Base.promote_type), Type{Int64}, Type{Int16}})
precompile(Tuple{typeof(Base.promote_rule), Type{Int16}, Type{Int64}})
precompile(Tuple{typeof(Base.promote_result), Type{Int64}, Type{Int16}, Type{Int64}, Type{Union{}}})
precompile(Tuple{typeof(Base.show), Base.GenericIOBuffer{Array{UInt8, 1}}, Int16})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Int16})
precompile(Tuple{typeof(Base.uv_status_string), Base.PipeServer})
precompile(Tuple{typeof(Base._fd), Base.PipeServer})
precompile(Tuple{typeof(Base.convert), Type{Int16}, Int16})
precompile(Tuple{typeof(Base.string), String, Int16, String, String, String, String})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.PipeServer})
precompile(Tuple{typeof(Base.unpreserve_handle), Base.PipeServer})
precompile(Tuple{typeof(Base.isopen), Base.PipeServer})
precompile(Tuple{typeof(Base.accept_nonblock), Base.PipeServer, Base.PipeEndpoint})
precompile(Tuple{typeof(Base.stream_wait), Base.PipeServer, Base.Condition})
precompile(Tuple{getfield(Base, Symbol("#kw##init_pipe!")), Array{Any, 1}, typeof(Base.init_pipe!), Base.PipeEndpoint})
precompile(Tuple{typeof(Base.accept), Base.PipeServer, Base.PipeEndpoint})
precompile(Tuple{typeof(Base.accept_nonblock), Base.TCPServer, Base.TCPSocket})
precompile(Tuple{Type{Base.TCPSocket}})
precompile(Tuple{typeof(Base.accept), Base.TCPServer, Base.TCPSocket})
precompile(Tuple{typeof(Base.accept), Base.TCPServer})
precompile(Tuple{typeof(Base.tryparse_internal), Type{Int16}, Base.SubString{String}, Int64, Int64, Int64, Bool})
precompile(Tuple{typeof(Base.parse), Type{Int16}, Base.SubString{String}})
precompile(Tuple{typeof(Base.write), Base.PipeEndpoint, String})
precompile(Tuple{typeof(Core.Compiler.isbits), Tuple{Tuple{String}, Tuple{String}, Tuple{String}, Tuple{String}, Tuple{String}, Tuple{String}}})
precompile(Tuple{typeof(Base.cmd_gen), Tuple{Tuple{String}, Tuple{String}, Tuple{String}, Tuple{String}, Tuple{String}, Tuple{String}}})
precompile(Tuple{typeof(Base.ndigits0z), UInt8})
precompile(Tuple{typeof(Base.dec), UInt8, Int64, Bool})
precompile(Tuple{typeof(Core.Compiler.length), Tuple{Core.Compiler.Const, typeof(Type), Core.Compiler.Const}})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Core.Compiler.Const, typeof(Type), Core.Compiler.Const}, Int64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Int64, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Int64, Nothing}, Int64})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Int64, Nothing}, Nothing, Int64, Int64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{AbstractString, Base.Semaphore}, Int64})
precompile(Tuple{typeof(Base.resize!), Array{Base.Semaphore, 1}, Int64})
precompile(Tuple{typeof(Base.acquire), Base.Semaphore})
precompile(Tuple{typeof(Base.release), Base.Semaphore})
precompile(Tuple{typeof(Base.isreadable), Base.PipeEndpoint})
precompile(Tuple{typeof(Base.findfirst), UInt8, Base.GenericIOBuffer{Array{UInt8, 1}}})
precompile(Tuple{typeof(Base.start_reading), Base.PipeEndpoint})
precompile(Tuple{typeof(Base.wait_readbyte), Base.PipeEndpoint, UInt8})
precompile(Tuple{typeof(Base.readuntil), Base.PipeEndpoint, UInt8})
precompile(Tuple{typeof(Base.alloc_buf_hook), Base.PipeEndpoint, UInt64})
precompile(Tuple{typeof(Base._uv_hook_close), Base.Timer})
precompile(Tuple{typeof(Base.notify), Base.Condition, Base.EOFError, Bool, Bool})
precompile(Tuple{typeof(Base.unpreserve_handle), Base.Timer})
precompile(Tuple{typeof(Base.disassociate_julia_struct), Base.Timer})
precompile(Tuple{typeof(Base._uv_hook_close), Base.Timer})
precompile(Tuple{typeof(Base.notify), Base.Condition, Base.EOFError, Bool, Bool})
precompile(Tuple{typeof(Base.unpreserve_handle), Base.Timer})
precompile(Tuple{typeof(Base.disassociate_julia_struct), Base.Timer})
precompile(Tuple{typeof(Base.convert), Type{Base.Union{AbstractString, Nothing}}, Base.SubString{String}})
precompile(Tuple{typeof(Base.connect!), Base.TCPSocket, Base.SubString{String}, UInt16})
precompile(Tuple{typeof(Base.notify), Base.Condition, Base.IPv4, Bool, Bool})
precompile(Tuple{typeof(Base.schedule), Task, Base.IPv4})
precompile(Tuple{typeof(Base.connect!), Base.TCPSocket, Base.IPv4, UInt16})
precompile(Tuple{typeof(Base.uv_status_string), Base.TCPSocket})
precompile(Tuple{typeof(Base._fd), Base.TCPSocket})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.TCPSocket})
precompile(Tuple{typeof(Base.isopen), Base.TCPSocket})
precompile(Tuple{typeof(Base.convert), Type{Base.Union{AbstractString, Nothing}}, String})
precompile(Tuple{typeof(Base.unpreserve_handle), Base.TCPSocket})
precompile(Tuple{typeof(Base.check_open), Base.TCPSocket})
precompile(Tuple{typeof(Base.stream_wait), Base.TCPSocket, Base.Condition})
precompile(Tuple{typeof(Base.read_sub), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{UInt8, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.isreadable), Base.TCPSocket})
precompile(Tuple{typeof(Base.start_reading), Base.TCPSocket})
precompile(Tuple{typeof(Base.write_sub), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{UInt8, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.readbytes!), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{UInt8, 1}, Int64})
precompile(Tuple{typeof(Base.wait_readnb), Base.TCPSocket, Int64})
precompile(Tuple{typeof(Base.write), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.GenericIOBuffer{Array{UInt8, 1}}})
precompile(Tuple{typeof(Base.readbytes!), Base.TCPSocket, Array{UInt8, 1}, Int64})
precompile(Tuple{typeof(Base.read), Base.TCPSocket, Int64})
precompile(Tuple{typeof(Base.unsafe_read), Base.TCPSocket, Ptr{UInt8}, UInt64})
precompile(Tuple{typeof(Base.read!), Base.TCPSocket, Array{Int64, 1}})
precompile(Tuple{typeof(Base.read), Base.TCPSocket, Type{UInt8}})
precompile(Tuple{typeof(Base.convert), Type{IO}, Base.TCPSocket})
precompile(Tuple{typeof(Base.convert), Type{Base.Union{Base.VersionNumber, Nothing}}, Base.Union{Base.VersionNumber, Nothing}})
precompile(Tuple{typeof(Base.join), Base.GenericIOBuffer{Array{UInt8, 1}}, Tuple{Int64}, Char})
precompile(Tuple{typeof(Base.close), Base.TCPSocket})
precompile(Tuple{typeof(Base.convert), Type{Base.AbstractChannel}, Base.Channel{Any}})
precompile(Tuple{typeof(Base.ndigits0z), UInt8})
precompile(Tuple{typeof(Base.dec), UInt8, Int64, Bool})
precompile(Tuple{typeof(Core.Compiler.mk_getfield), TypedSlot, Int64, Type{Integer}})
precompile(Tuple{typeof(Core.Compiler.length), Tuple{Core.Compiler.Const, DataType, Core.Compiler.Const}})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Core.Compiler.Const, DataType, Core.Compiler.Const}, Int64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Int64, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Int64, Nothing}, Int64})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Int64, Nothing}, Nothing, Int64, Int64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Int64, Nothing}, Nothing, Int64})
precompile(Tuple{typeof(Base.wait_connected), Base.TCPSocket})
precompile(Tuple{typeof(Base.write), Base.TCPSocket, String})
precompile(Tuple{typeof(Base.uv_write), Base.TCPSocket, Ptr{UInt8}, UInt64})
precompile(Tuple{typeof(Base.flush), Base.TCPSocket})
precompile(Tuple{typeof(Base.unsafe_write), Base.TCPSocket, Ptr{UInt8}, UInt64})
precompile(Tuple{typeof(Base.write), Base.TCPSocket, Int64, Int64, Int64, Int64})
precompile(Tuple{typeof(Base.unsafe_write), Base.TCPSocket, Base.RefValue{Int64}, Int64})
precompile(Tuple{typeof(Base.unsafe_write), Base.TCPSocket, Base.RefValue{UInt8}, Int64})
precompile(Tuple{typeof(Core.Compiler.length), Tuple{Core.Compiler.Const, DataType, Core.Compiler.Const}})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Core.Compiler.Const, DataType, Core.Compiler.Const}, Int64})
precompile(Tuple{typeof(Base.unsafe_write), Base.TCPSocket, Base.RefValue{Int32}, Int64})
precompile(Tuple{typeof(Base.copyto!), Array{Any, 1}, Base.MethodList})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{UInt64, UInt64}, UInt64})
precompile(Tuple{typeof(Base.unique), Array{Symbol, 1}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{UInt64, UInt64}, Int64})
precompile(Tuple{typeof(Base.resize!), Array{UInt64, 1}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{UInt64, UInt64}, UInt64})
precompile(Tuple{typeof(Core.Compiler.isbits), Symbol})
precompile(Tuple{typeof(Base.isassigned), Array{Symbol, 1}, Int64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{UInt64, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{UInt64, Nothing}, UInt64})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{UInt64, Nothing}, Nothing, UInt64, Int64})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{WeakRef, Any}, TypeName})
precompile(Tuple{typeof(Base.isassigned), Array{Union{Tuple{Any, Int64}, Tuple{Tuple{}, Any, Bool}}, 1}, Int64})
precompile(Tuple{typeof(Base.uvfinalize), Base.TCPSocket})
precompile(Tuple{typeof(Base.close), Base.TCPSocket})
precompile(Tuple{typeof(Base.write), Base.TCPSocket, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.wait_readnb), Base.PipeEndpoint, Int64})
precompile(Tuple{typeof(Base.eof), Base.PipeEndpoint})
precompile(Tuple{typeof(Base.unsafe_read), Base.TCPSocket, Base.RefValue{Int32}, Int64})
precompile(Tuple{typeof(Base.unsafe_read), Base.TCPSocket, Base.RefValue{Int64}, Int64})
precompile(Tuple{typeof(Base.read!), Base.TCPSocket, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.read_sub), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{UInt8, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.isreadable), Base.TCPSocket})
precompile(Tuple{typeof(Base.start_reading), Base.TCPSocket})
precompile(Tuple{typeof(Base.write_sub), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{UInt8, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.readbytes!), Base.GenericIOBuffer{Array{UInt8, 1}}, Array{UInt8, 1}, Int64})
precompile(Tuple{typeof(Base.wait_readnb), Base.TCPSocket, Int64})
precompile(Tuple{typeof(Base.write), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.GenericIOBuffer{Array{UInt8, 1}}})
precompile(Tuple{typeof(Base.readbytes!), Base.TCPSocket, Array{UInt8, 1}, Int64})
precompile(Tuple{typeof(Base.read), Base.TCPSocket, Int64})
precompile(Tuple{typeof(Base.promote_type), Type{Int64}, Type{UInt8}})
precompile(Tuple{typeof(Base.promote_rule), Type{Int64}, Type{UInt8}})
precompile(Tuple{typeof(Base.promote_result), Type{Int64}, Type{UInt8}, Type{Union{}}, Type{Int64}})
precompile(Tuple{typeof(Base.read!), Base.TCPSocket, Array{UInt64, 1}})
precompile(Tuple{typeof(Base.unsafe_read), Base.TCPSocket, Ptr{UInt8}, UInt64})
precompile(Tuple{typeof(Base.read!), Base.TCPSocket, Array{Int64, 1}})
precompile(Tuple{typeof(Base.read), Base.TCPSocket, Type{UInt8}})
precompile(Tuple{typeof(Base._array_for), Type{Union{}}, Base.UnitRange{Int64}, Base.HasShape})
precompile(Tuple{typeof(Base.join), Base.GenericIOBuffer{Array{UInt8, 1}}, Tuple{Int64}, Char})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Int64, Nothing}, Nothing, Int64})
precompile(Tuple{Type{Array{Union{Tuple{Any, Int64}, Tuple{Tuple{}, Any, Bool}}, 1}}, Tuple{Int64}})
precompile(Tuple{typeof(Base.eachindex), Array{Union{Tuple{Any, Int64}, Tuple{Tuple{}, Any, Bool}}, 1}})
precompile(Tuple{typeof(Base.eltype), Type{Base.Union{IO, Nothing}}})
precompile(Tuple{Type{Base.Union{IO, Nothing}}})
precompile(Tuple{typeof(Base.eltype), Type{Base.Union{AbstractString, Nothing}}})
precompile(Tuple{Type{Base.Union{AbstractString, Nothing}}})
precompile(Tuple{typeof(Base.eltype), Type{Base.Union{Integer, Nothing}}})
precompile(Tuple{Type{Base.Union{Integer, Nothing}}})
precompile(Tuple{typeof(Base.eltype), Type{Base.Union{Some{Union{Int64, Symbol}}, Nothing}}})
precompile(Tuple{Type{Base.Union{Int64, Symbol, Nothing}}})
precompile(Tuple{typeof(Base.eltype), Type{Base.Union{Base.Cmd, Nothing}}})
precompile(Tuple{Type{Base.Union{Base.Cmd, Nothing}}})
precompile(Tuple{typeof(Base.eltype), Type{Any}})
precompile(Tuple{Type{Any}})
precompile(Tuple{typeof(Base.eltype), Type{Base.Union{Bool, Nothing}}})
precompile(Tuple{Type{Base.Union{Bool, Nothing}}})
precompile(Tuple{typeof(Base.eltype), Type{Base.Union{Base.Process, Nothing}}})
precompile(Tuple{Type{Base.Union{Base.Process, Nothing}}})
precompile(Tuple{typeof(Base.eltype), Type{Base.Union{Base.Dict{K, V}, Nothing} where V where K}})
precompile(Tuple{Type{Base.Union{Base.Dict{K, V}, Nothing} where V where K}})
precompile(Tuple{typeof(Base.eltype), Type{Base.Union{Array{T, N}, Nothing} where N where T}})
precompile(Tuple{Type{Base.Union{Array{T, N}, Nothing} where N where T}})
precompile(Tuple{typeof(Base.convert), Type{IO}, Base.TCPSocket})
precompile(Tuple{typeof(Base.convert), Type{Base.Union{Base.VersionNumber, Nothing}}, Base.VersionNumber})
precompile(Tuple{typeof(Base.unsafe_write), Base.TCPSocket, Ptr{UInt8}, UInt64})
precompile(Tuple{typeof(Base.uv_write), Base.TCPSocket, Ptr{UInt8}, UInt64})
precompile(Tuple{typeof(Base.flush), Base.TCPSocket})
precompile(Tuple{typeof(Base.write), Base.TCPSocket, Int64, Int64, Int64, Int64})
precompile(Tuple{typeof(Base.unsafe_write), Base.TCPSocket, Base.RefValue{Int64}, Int64})
precompile(Tuple{typeof(Base.unsafe_write), Base.TCPSocket, Base.RefValue{UInt8}, Int64})
precompile(Tuple{typeof(Base.write), Base.TCPSocket, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.unsafe_read), Base.TCPSocket, Base.RefValue{Int32}, Int64})
precompile(Tuple{typeof(Base.unsafe_read), Base.TCPSocket, Base.RefValue{Int64}, Int64})
precompile(Tuple{typeof(Base.read!), Base.TCPSocket, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.promote_type), Type{Int64}, Type{UInt8}})
precompile(Tuple{typeof(Base.promote_rule), Type{Int64}, Type{UInt8}})
precompile(Tuple{typeof(Base.promote_result), Type{Int64}, Type{UInt8}, Type{Union{}}, Type{Int64}})
precompile(Tuple{typeof(Base.read!), Base.TCPSocket, Array{UInt64, 1}})
precompile(Tuple{typeof(Base._array_for), Type{Union{}}, Base.UnitRange{Int64}, Base.HasShape})
precompile(Tuple{typeof(Base.read), Base.TCPSocket, Type{Int64}})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{WeakRef, Nothing}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{WeakRef, Nothing}, WeakRef})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{WeakRef, Nothing}, Nothing, WeakRef, Int64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{WeakRef, Nothing}, Nothing, WeakRef})
precompile(Tuple{Type{Base.Channel{Int64}}, Int64})
precompile(Tuple{typeof(Base.get), Base.Union{Base.Dict{K, V}, Nothing} where V where K, Base.Dict{Any, Any}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Int64, Symbol})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Any, Any}, Int64, Symbol, Int64})
precompile(Tuple{typeof(Base.convert), Type{Base.Union{Base.Dict{K, V}, Nothing} where V where K}, Base.Dict{Any, Any}})
precompile(Tuple{typeof(Base.convert), Type{Base.Union{Integer, Nothing}}, Int64})
precompile(Tuple{typeof(Base.convert), Type{Base.Union{Base.VersionNumber, Nothing}}, Base.VersionNumber})
precompile(Tuple{typeof(Base.put!), Base.Channel{Any}, Int64})
precompile(Tuple{typeof(Base.put_buffered), Base.Channel{Any}, Int64})
precompile(Tuple{typeof(Base.put_unbuffered), Base.Channel{Any}, Int64})
precompile(Tuple{typeof(Base.check_channel_state), Base.Channel{Int64}})
precompile(Tuple{typeof(Base.put_buffered), Base.Channel{Int64}, Int64})
precompile(Tuple{typeof(Base.put_unbuffered), Base.Channel{Int64}, Int64})
precompile(Tuple{typeof(Base.put!), Base.Channel{Int64}, Int64})
precompile(Tuple{typeof(Base._delete!), Base.Dict{Any, Any}, Int64})
precompile(Tuple{typeof(Base.write), Base.TCPSocket, Array{Int64, 1}})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.InsertionSortAlg, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.Sort.partition!), Array{Int64, 1}, Int64, Int64, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.sort!), Array{Int64, 1}, Int64, Int64, Base.Sort.QuickSortAlg, Base.Order.ForwardOrdering})
precompile(Tuple{typeof(Base.put!), Base.Channel{Any}, Tuple{Array{Int64, 1}, Nothing}})
precompile(Tuple{typeof(Base.put_buffered), Base.Channel{Any}, Tuple{Array{Int64, 1}, Nothing}})
precompile(Tuple{typeof(Base.put_unbuffered), Base.Channel{Any}, Tuple{Array{Int64, 1}, Nothing}})
precompile(Tuple{typeof(Base.promote_type), Type{Int64}, Type{Int64}})
precompile(Tuple{typeof(Base.sizehint!), Base.Dict{Int64, Nothing}, Int64})
precompile(Tuple{typeof(Base.union!), Base.Set{Int64}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.start), Tuple{Array{Int64, 1}, Nothing}})
precompile(Tuple{typeof(Base.indexed_next), Tuple{Array{Int64, 1}, Nothing}, Int64, Int64})
precompile(Tuple{typeof(Base.setdiff), Array{Int64, 1}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.Multimedia.display), Array{Int64, 1}})
precompile(Tuple{typeof(Base.isassigned), Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.summary), Array{Int64, 1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.isassigned), Array{Int64, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.isassigned), Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), Base.ImmutableDict{Symbol, Any}, Symbol})
precompile(Tuple{typeof(Base.vcat), Base.OneTo{Int64}})
precompile(Tuple{typeof(Base.collect_to!), Array{Int64, 1}, Base.Generator{Array{Tuple{Int64, Int64}, 1}, typeof(Base.sum)}, Int64, Int64})
precompile(Tuple{typeof(Base._collect), Array{Tuple{Int64, Int64}, 1}, Base.Generator{Array{Tuple{Int64, Int64}, 1}, typeof(Base.sum)}, Base.EltypeUnknown, Base.HasShape})
precompile(Tuple{typeof(Base.pop!), Array{Tuple{Int64, Int64}, 1}})
precompile(Tuple{typeof(Base.reverse), Array{Tuple{Int64, Int64}, 1}, Int64, Int64})
precompile(Tuple{getfield(Base, Symbol("#kw##sprint")), Array{Any, 1}, typeof(Base.sprint), Int64, typeof(Base.show), Int64})
precompile(Tuple{typeof(Base._sub2ind), Tuple{Int64}, Int64, Int64})
precompile(Tuple{typeof(Base._sub2ind_recurse), Tuple{Int64}, Int64, Int64, Int64, Int64})
precompile(Tuple{typeof(Base._sub2ind_recurse), Tuple{}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base.first), Array{Int64, 1}})
precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.OneTo{Int64}})
precompile(Tuple{typeof(Base.last), Array{Int64, 1}})
precompile(Tuple{typeof(Base.print), String})
precompile(Tuple{typeof(Base.vcat), Array{Int64, 1}})
precompile(Tuple{typeof(Core.Compiler.eltype), Type{Array{Int64, 1}}})
precompile(Tuple{typeof(Base.vcat), Int64})
precompile(Tuple{typeof(Base.uvfinalize), Base.PipeEndpoint})
precompile(Tuple{typeof(Base.unpreserve_handle), Base.PipeEndpoint})
precompile(Tuple{typeof(Base.stream_wait), Base.PipeEndpoint, Base.Condition})
precompile(Tuple{typeof(Base.close), Base.PipeEndpoint})
precompile(Tuple{typeof(Base.uvfinalize), Base.TCPServer})
precompile(Tuple{typeof(Base.uvfinalize), Base.TCPSocket})
precompile(Tuple{typeof(Base._uv_hook_close), Base.TCPSocket})
precompile(Tuple{typeof(Base.in), Int64, Base.BitSet})
precompile(Tuple{typeof(Base._uv_hook_close), Base.Process})
precompile(Tuple{typeof(Base._delete!), Base.Dict{WeakRef, Nothing}, Int64})
precompile(Tuple{typeof(Base.delete!), Base.BitSet, Int64})
precompile(Tuple{typeof(Base.isempty), Base.BitSet})
precompile(Tuple{typeof(Base.any), Base.BitArray{1}})
precompile(Tuple{typeof(Base.uvfinalize), Base.PipeEndpoint})
precompile(Tuple{typeof(Base.uvfinalize), Base.Process})
precompile(Tuple{getfield(Base.Filesystem, Symbol("#kw##rm")), Array{Any, 1}, typeof(Base.Filesystem.rm), String})
precompile(Tuple{getfield(Base, Symbol("#kw##info")), Array{Any, 1}, typeof(Base.info), Base.IOStream, String})
precompile(Tuple{getfield(Base, Symbol("#kw##readbytes!")), Array{Any, 1}, typeof(Base.readbytes!), Base.IOStream, Array{UInt8, 1}, Int32})
precompile(Tuple{getfield(Base, Symbol("#kw##spawn")), Array{Any, 1}, typeof(Base.spawn), Base.Cmd, Tuple{Base.Pipe, Base.TTY, Base.IOStream}})
precompile(Tuple{getfield(Base, Symbol("#kw##systemerror")), Array{Any, 1}, typeof(Base.systemerror), Symbol, Bool})
precompile(Tuple{getfield(Base, Symbol("#kw##with_output_color")), Array{Any, 1}, typeof(Base.with_output_color), typeof(Base.println), Symbol, Base.IOStream, Base.SubString{String}})
precompile(Tuple{getfield(Base, Symbol("#kw##with_output_color")), Array{Any, 1}, typeof(Base.with_output_color), typeof(Base.print), Symbol, Base.IOStream, String})
precompile(Tuple{Type{Base.Process}, Base.Cmd, Ptr{Cvoid}, Base.Pipe, Base.TTY, Base.IOStream})
precompile(Tuple{Type{Base.Set{Tuple{String, Float64}}}, Tuple{Tuple{String, Float64}}})
precompile(Tuple{Type{Base.VersionNumber}, Int64, Int64, Int64, Tuple{String, Int64}, Tuple{}})
precompile(Tuple{Type{Base.VersionNumber}, Int64, Int64, Int64, Tuple{String}, Tuple{Int64}})
precompile(Tuple{Type{Core.Compiler.Generator{I, F} where F where I}, Type{Core.Compiler.Const}, Tuple{Symbol, Expr}})
precompile(Tuple{Type{Core.Compiler.Generator{Tuple{Symbol, Expr}, Type{Core.Compiler.Const}}}, Type{Core.Compiler.Const}, Tuple{Symbol, Expr}})
precompile(Tuple{typeof(Base.cmd_gen), Tuple{Tuple{Base.Cmd}, Tuple{String}, Tuple{String}, Tuple{String}, Tuple{String}, Tuple{String}, Tuple{String}, Tuple{String, String}, Tuple{String}, Tuple{String}}})
precompile(Tuple{typeof(Base._collect), Array{Any, 1}, Base.Generator{Array{Any, 1}, typeof(Base.FastMath.make_fastmath)}, Base.EltypeUnknown, Base.HasShape})
precompile(Tuple{typeof(Base._collect), Array{Base.Process, 1}, Base.Generator{Array{Base.Process, 1}, typeof(Base.kill)}, Base.EltypeUnknown, Base.HasShape})
precompile(Tuple{typeof(Base.collect_to!), Array{Any, 1}, Base.Generator{Array{Any, 1}, typeof(Base.FastMath.make_fastmath)}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Array{Any, 1}, typeof(Base.FastMath.make_fastmath)}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Int32, 1}, Base.Generator{Array{Base.Process, 1}, typeof(Base.kill)}, Int64, Int64})
precompile(Tuple{typeof(Base.collect_to!), Array{Symbol, 1}, Base.Generator{Array{Any, 1}, typeof(Base.FastMath.make_fastmath)}, Int64, Int64})
precompile(Tuple{typeof(Base.compilecache), String})
precompile(Tuple{typeof(Base.copyto!), Array{Tuple{String, Float64}, 1}, Int64, Array{Tuple{String, Float64}, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.create_expr_cache), String, String, typeof(Base._concrete_dependencies)})
precompile(Tuple{typeof(Base._delete!), Base.Dict{Symbol, Base.Condition}, Int64})
precompile(Tuple{typeof(Base.Docs.docm), LineNumberNode, Module, String, Expr})
precompile(Tuple{typeof(Base.Docs.docm), LineNumberNode, Module, String, Expr, Bool})
precompile(Tuple{typeof(Base.Docs.keyworddoc), String, Base.BaseDocs.Keyword})
precompile(Tuple{typeof(Base.Docs.objectdoc), String, Expr, Expr, Expr})
precompile(Tuple{typeof(Base.FastMath.make_fastmath), Expr})
precompile(Tuple{typeof(Base.Filesystem.lstat), String})
precompile(Tuple{typeof(Base.Filesystem.mkdir), String, UInt16})
precompile(Tuple{typeof(Base.Filesystem.mkpath), String, UInt16})
precompile(Tuple{typeof(Base.Filesystem.samefile), String, String})
precompile(Tuple{typeof(Base.Filesystem.unlink), String})
precompile(Tuple{typeof(Base.find_all_in_cache_path), Symbol})
precompile(Tuple{typeof(Base.find_package), String})
precompile(Tuple{typeof(Base.find_source_file), String})
precompile(Tuple{typeof(Base.getindex), Base.IdDict, Symbol})
precompile(Tuple{typeof(Base.getindex), Type{Tuple{String, Float64}}, Tuple{String, Float64}})
precompile(Tuple{typeof(Base.Grisu._show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Float64, Int64, Int64, Bool, Bool})
precompile(Tuple{typeof(Base.hash), Tuple{String, Float64}, UInt64})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, Base.Condition}, Symbol})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Symbol, UInt64}, Symbol})
precompile(Tuple{typeof(Base.ht_keyindex2!), Base.Dict{Tuple{String, Float64}, Nothing}, Tuple{String, Float64}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Symbol, Base.Condition}, Symbol})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Symbol, UInt64}, Symbol})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Tuple{String, Float64}, Nothing}, Tuple{String, Float64}})
precompile(Tuple{typeof(Base.ident_cmp), Tuple{String, String, Int64}, Tuple{String, Int64}})
precompile(Tuple{typeof(Base.include_relative), String})
precompile(Tuple{typeof(Base._include_from_serialized), String, Vector{Any}})
precompile(Tuple{typeof(Base.indexed_next), Tuple{Symbol, UInt64}, Int64, Int64})
precompile(Tuple{typeof(Base.indexed_next), Tuple{Nothing, Nothing}, Int64, Int64})
precompile(Tuple{typeof(Base.isassigned), Array{String, 1}, Int64})
precompile(Tuple{typeof(Base.isempty), Tuple{String, Int64}})
precompile(Tuple{typeof(Base.isequal), Float64, String})
precompile(Tuple{typeof(Base.isequal), String, Float64})
precompile(Tuple{typeof(Base.isequal), Tuple{String, Float64}, Tuple{String, Float64}})
precompile(Tuple{typeof(Base._jl_spawn), String, Array{String, 1}, Ptr{Cvoid}, Base.Process, Base.PipeEndpoint, Base.TTY, Base.Filesystem.File})
precompile(Tuple{typeof(Base.julia_cmd)})
precompile(Tuple{typeof(Base.next), Base.Generator{Array{Any, 1}, typeof(Base.FastMath.make_fastmath)}, Int64})
precompile(Tuple{typeof(Base.open), Base.CmdRedirect, String, Base.TTY})
precompile(Tuple{typeof(Base.open), String, String})
precompile(Tuple{typeof(Base.open), typeof(Base.read), String})
precompile(Tuple{typeof(Base.parse_cache_header), Base.IOStream})
precompile(Tuple{typeof(Base.pop!), Base.Dict{Symbol, Base.Condition}, Symbol})
precompile(Tuple{typeof(Base.precompilableerror), Base.LoadError, Bool})
precompile(Tuple{typeof(Base.precompilableerror), Base.PrecompilableError, Bool})
precompile(Tuple{typeof(Base.__precompile__)})
precompile(Tuple{typeof(Base.__precompile__), Bool})
precompile(Tuple{typeof(Base.push!), Array{Tuple{String, Float64}, 1}, Tuple{String, Float64}})
precompile(Tuple{typeof(Base.put!), Base.Channel{Any}, Tuple{Nothing, Nothing}})
precompile(Tuple{typeof(Base.put_buffered), Base.Channel{Any}, Tuple{Nothing, Nothing}})
precompile(Tuple{typeof(Base.put_unbuffered), Base.Channel{Any}, Tuple{Nothing, Nothing}})
precompile(Tuple{typeof(Base.read), Base.IOStream, Type{Int32}})
precompile(Tuple{typeof(Base.read), Base.IOStream, Type{Int64}})
precompile(Tuple{typeof(Base.read), Base.IOStream, Type{UInt64}})
precompile(Tuple{typeof(Base.read!), Base.PipeEndpoint, Array{UInt64, 1}})
precompile(Tuple{typeof(Base.read!), Base.PipeEndpoint, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.read), Base.PipeEndpoint, Type{Int64}})
precompile(Tuple{typeof(Base.read), Base.PipeEndpoint, Type{UInt64}})
precompile(Tuple{typeof(Base.read), Base.PipeEndpoint, Type{UInt8}})
precompile(Tuple{typeof(Base.readbytes_all!), Base.IOStream, Array{UInt8, 1}, Int32})
precompile(Tuple{typeof(Base.readbytes_some!), Base.IOStream, Array{UInt8, 1}, Int32})
precompile(Tuple{typeof(Base._redirect), Base.IOStream, Base.Dict{Tuple{Union{Module, Nothing}, Union{Symbol, Nothing}}, IO}, Base.StackTraces.StackFrame})
precompile(Tuple{typeof(Base._redirect), Base.IOStream, Base.Dict{Tuple{Union{Module, Nothing}, Union{Symbol, Nothing}}, IO}, Symbol})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, Base.Condition}, Int64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Symbol, UInt64}, Int64})
precompile(Tuple{typeof(Base.rehash!), Base.Dict{Tuple{String, Float64}, Nothing}, Int64})
precompile(Tuple{typeof(Base.remove_linenums!), Module})
precompile(Tuple{typeof(Base._require_from_serialized), String})
precompile(Tuple{typeof(Base._require_search_from_serialized), Symbol, String})
precompile(Tuple{typeof(Base.require), Module, Symbol})
precompile(Tuple{typeof(Base.resize!), Array{Base.Condition, 1}, Int64})
precompile(Tuple{typeof(Base.resize!), Array{Tuple{String, Float64}, 1}, Int64})
precompile(Tuple{typeof(Base.resize!), Array{UInt8, 1}, Int32})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Base.Condition}, Base.Condition, Symbol})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Symbol, Base.Condition}, Base.Condition, Symbol, Int64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, UInt64}, UInt64, Symbol})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Symbol, UInt64}, UInt64, Symbol, Int64})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Tuple{String, Float64}, Nothing}, Nothing, Tuple{String, Float64}})
precompile(Tuple{typeof(Base._setindex!), Base.Dict{Tuple{String, Float64}, Nothing}, Nothing, Tuple{String, Float64}, Int64})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Float64})
precompile(Tuple{typeof(Base.show_delim_array), Base.GenericIOBuffer{Array{UInt8, 1}}, Tuple{String, Float64}, Char, Char, Char, Bool, Int64, Int64})
precompile(Tuple{typeof(Base.show_unquoted), Base.GenericIOBuffer{Array{UInt8, 1}}, Expr})
precompile(Tuple{typeof(Base.skip_deleted), Base.Dict{Tuple{String, Float64}, Nothing}, Int64})
precompile(Tuple{typeof(Base.spawn), Base.CmdRedirect, Tuple{Base.Pipe, Base.TTY, Base.IOStream}})
precompile(Tuple{typeof(Base.stale_cachefile), String, String})
precompile(Tuple{typeof(Base.start), Tuple{Symbol, UInt64}})
precompile(Tuple{typeof(Base.start), Tuple{Nothing, Nothing}})
precompile(Tuple{typeof(Base.:(>)), String, String})
precompile(Tuple{typeof(Base.trunc), Float64, Int64, Int64})
precompile(Tuple{typeof(Base.union!), Base.Set{Tuple{String, Float64}}, Tuple{Tuple{String, Float64}}})
precompile(Tuple{typeof(Base.unique_from), Array{Any, 1}, Array{Tuple{String, Float64}, 1}, Base.Set{Tuple{String, Float64}}, Int64})
precompile(Tuple{typeof(Base.unsafe_copyto!), Array{Tuple{String, Float64}, 1}, Int64, Array{Tuple{String, Float64}, 1}, Int64, Int64})
precompile(Tuple{typeof(Base.unsafe_read), Base.IOStream, Base.RefValue{Float64}, Int64})
precompile(Tuple{typeof(Base.unsafe_read), Base.PipeEndpoint, Base.RefValue{Int32}, Int64})
precompile(Tuple{typeof(Base.unsafe_read), Base.PipeEndpoint, Base.RefValue{Int64}, Int64})
precompile(Tuple{typeof(Base.unsafe_read), Base.PipeEndpoint, Base.RefValue{UInt64}, Int64})
precompile(Tuple{typeof(Base.unsafe_read), Base.PipeEndpoint, Ptr{UInt8}, UInt64})
precompile(Tuple{typeof(Base.unsafe_write), Base.Pipe, Base.RefValue{Int32}, Int64})
precompile(Tuple{typeof(Base.unsafe_write), Base.Pipe, Base.RefValue{Int64}, Int64})
precompile(Tuple{typeof(Base.unsafe_write), Base.Pipe, Base.RefValue{UInt64}, Int64})
precompile(Tuple{typeof(Base.write), Base.Pipe, UInt64})
precompile(Tuple{typeof(Core.Compiler.collect), Type{Any}, Core.Compiler.Generator{Tuple{Symbol, Expr}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler._collect), Type{Any}, Core.Compiler.Generator{Tuple{Symbol, Expr}, Type{Core.Compiler.Const}}, Core.Compiler.HasLength})
precompile(Tuple{typeof(Core.Compiler.convert), Type{Tuple{Symbol, Expr}}, Tuple{Symbol, Expr}})
precompile(Tuple{typeof(Core.Compiler.copyto!), Array{Any, 1}, Core.Compiler.Generator{Tuple{Symbol, Expr}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler.done), Core.Compiler.Generator{Tuple{Symbol, Expr}, Type{Core.Compiler.Const}}, Int64})
precompile(Tuple{typeof(Core.Compiler.done), Tuple{Symbol, Expr}, Int64})
precompile(Tuple{typeof(Core.Compiler.getindex), Tuple{Symbol, Expr}, Int64})
precompile(Tuple{typeof(Core.Compiler.isbits), Array{Module, 1}})
precompile(Tuple{typeof(Core.Compiler.length), Core.Compiler.Generator{Tuple{Symbol, Expr}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler.length), Tuple{Symbol, Expr}})
precompile(Tuple{typeof(Core.Compiler.next), Core.Compiler.Generator{Tuple{Symbol, Expr}, Type{Core.Compiler.Const}}, Int64})
precompile(Tuple{typeof(Core.Compiler.next), Tuple{Symbol, Expr}, Int64})
precompile(Tuple{typeof(Core.Compiler.start), Core.Compiler.Generator{Tuple{Symbol, Expr}, Type{Core.Compiler.Const}}})
precompile(Tuple{typeof(Core.Compiler.start), Tuple{Expr, Int64}})
precompile(Tuple{typeof(Core.Compiler.start), Tuple{Symbol, Expr}})
