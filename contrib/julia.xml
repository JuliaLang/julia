<?xml version="1.0" encoding="UTF-8"?>
<!--
  ====================================================================
  Julia syntax highlighting file for the KDE editors Kate and Kwrite
  ====================================================================

  This was adapted from the Matlab syntax highlighting file

  Most of this XML file is straightforward. Only the character ' (&apos;)
  needs nontrivial treatment, since it is both a postfix operator indicating
  complex conjugate transpose (adjoint) and a character delimiter. It is an
  adjoint operator in the following positions:
  1) immediately after an identifier (variable, function, but not keyword)
  2) immediately after a number literal
  3) immediately after the closing parenthesis ), ] and }
  4) immediately after a simple transpose operator .'
  5) immediately after another adjoint operator '
  Otherwise it is a character delimiter.

  This is implemented using look-ahead regexps. If one of the entities in the
  above cases 1-4 (identifier, number literal, ...) matches and look-ahead
  shows that it is followed by a ', the entity is highlighted and control is
  passed to the special context _adjoint, whose sole purpose is to correctly
  highlight a series of ' (thus covering case 5 as well). _adjoint immediately
  returns to the default context _normal.

  Author: Timothy E. Holy, Washington University in St. Louis
-->

<!DOCTYPE language SYSTEM "language.dtd">

<language name="Julia" section="Sources" version="0.2" kateversion="2.2" extensions="*.jl" casesensitive="1" priority="5" license="MIT">

  <highlighting>
    <list name="block_begin">
      <item> begin </item>
      <item> do </item>
      <item> for </item>
      <item> function </item>
      <item> if </item>
      <item> let </item>
      <item> quote </item>
      <item> try </item>
      <item> type </item>
      <item> while </item>
    </list>
    <list name="block_eb">
      <item> catch </item>
      <item> finally </item>
      <item> else </item>
      <item> elseif </item>
    </list>
    <list name="block_end">
      <item> end </item>
    </list>
    <list name="keywords">
      <item> abstract </item>
      <item> bitstype </item>
      <item> break </item>
      <item> ccall </item>
      <item> const </item>
      <item> continue </item>
      <item> export </item>
      <item> global </item>
      <item> import </item>
      <item> importall </item>
      <item> in </item>
      <item> local </item>
      <item> macro </item>
      <item> module </item>
      <item> baremodule </item>
      <item> return </item>
      <item> typealias </item>
      <item> using </item>
    </list>
    <list name="types">
      <item> AbstractArray </item>
      <item> AbstractMatrix </item>
      <item> AbstractVector </item>
      <item> Any </item>
      <item> Array </item>
      <item> ASCIIString </item>
      <item> Associative </item>
      <item> Bool </item>
      <item> ByteString </item>
      <item> Char </item>
      <item> Complex </item>
      <item> Complex64 </item>
      <item> Complex128 </item>
      <item> ComplexPair </item>
      <item> DArray </item>
      <item> Dict </item>
      <item> Exception </item>
      <item> Expr </item>
      <item> Float </item>
      <item> Float32 </item>
      <item> Float64 </item>
      <item> Function </item>
      <item> ObjectIdDict </item>
      <item> Int </item>
      <item> Int8 </item>
      <item> Int16 </item>
      <item> Int32 </item>
      <item> Int64 </item>
      <item> Int128 </item>
      <item> Integer </item>
      <item> IntSet </item>
      <item> IO </item>
      <item> IOStream </item>
      <item> Matrix </item>
      <item> Nothing </item>
      <item> None </item>
      <item> NTuple </item>
      <item> Number </item>
      <item> Ptr </item>
      <item> Range </item>
      <item> Range1 </item>
      <item> Ranges </item>
      <item> Rational </item>
      <item> Real </item>
      <item> Regex </item>
      <item> RegexMatch </item>
      <item> Set </item>
      <item> Signed </item>
      <item> StridedArray </item>
      <item> StridedMatrix </item>
      <item> StridedVecOrMat </item>
      <item> StridedVector </item>
      <item> String </item>
      <item> SubArray </item>
      <item> SubString </item>
      <item> Symbol </item>
      <item> Task </item>
      <item> Tuple </item>
      <item> Type </item>
      <item> Uint </item>
      <item> Uint8 </item>
      <item> Uint16 </item>
      <item> Uint32 </item>
      <item> Uint64 </item>
      <item> Uint128 </item>
      <item> Union </item>
      <item> Unsigned </item>
      <item> UTF8String </item>
      <item> VecOrMat </item>
      <item> Vector </item>
      <item> Void </item>
      <item> WeakRef </item>
    </list>
        <list name="functions">
        <item>abs</item>
        <item>abs2</item>
        <item>acos</item>
        <item>acosd</item>
        <item>acosh</item>
        <item>acot</item>
        <item>acotd</item>
        <item>acoth</item>
        <item>acsc</item>
        <item>acscd</item>
        <item>acsch</item>
        <item>angle</item>
        <item>asec</item>
        <item>asecd</item>
        <item>asech</item>
        <item>asin</item>
        <item>asind</item>
        <item>asinh</item>
        <item>atan</item>
        <item>atan2</item>
        <item>atand</item>
        <item>atanh</item>
        <item>bitmix</item>
        <item>bool</item>
        <item>binomial</item>
        <item>bswap</item>
        <item>cbrt</item>
        <item>ceil</item>
        <item>cis</item>
        <item>clamp</item>
        <item>cmp</item>
        <item>combinations</item>
        <item>complex</item>
        <item>complex128</item>
        <item>complex64</item>
        <item>conj</item>
        <item>copysign</item>
        <item>cos</item>
        <item>cosc</item>
        <item>cosd</item>
        <item>cosh</item>
        <item>cot</item>
        <item>cotd</item>
        <item>coth</item>
        <item>count_ones</item>
        <item>count_zeros</item>
        <item>csc</item>
        <item>cscd</item>
        <item>csch</item>
        <item>dawson</item>
        <item>degrees2radians</item>
        <item>den</item>
        <item>digamma</item>
        <item>div</item>
        <item>eps</item>
        <item>erf</item>
        <item>erfc</item>
        <item>erfcx</item>
        <item>erfi</item>
        <item>exp</item>
        <item>exp2</item>
        <item>expm1</item>
        <item>factor</item>
        <item>factorial</item>
        <item>fld</item>
        <item>flipsign</item>
        <item>float</item>
        <item>float32</item>
        <item>float64</item>
        <item>float64_valued</item>
        <item>floor</item>
        <item>frexp</item>
        <item>gamma</item>
        <item>gcd</item>
        <item>gcdx</item>
        <item>hex2num</item>
        <item>hypot</item>
        <item>iceil</item>
        <item>ifloor</item>
        <item>ilogb</item>
        <item>imag</item>
        <item>inf</item>
        <item>int</item>
        <item>int128</item>
        <item>int16</item>
        <item>int32</item>
        <item>int64</item>
        <item>int8</item>
        <item>integer</item>
        <item>integer_partitions</item>
        <item>integer_valued</item>
        <item>inv</item>
        <item>invmod</item>
        <item>iround</item>
        <item>isbool</item>
        <item>iscomplex</item>
        <item>isdenormal</item>
        <item>iseven</item>
        <item>isfinite</item>
        <item>isinf</item>
        <item>isinteger</item>
        <item>islogical</item>
        <item>isnan</item>
        <item>isodd</item>
        <item>ispow2</item>
        <item>isprime</item>
        <item>isreal</item>
        <item>itrunc</item>
        <item>lcm</item>
        <item>ldexp</item>
        <item>leading_ones</item>
        <item>leading_zeros</item>
        <item>lfact</item>
        <item>lgamma</item>
        <item>log</item>
        <item>log10</item>
        <item>log1p</item>
        <item>log2</item>
        <item>logb</item>
        <item>maxintfloat</item>
        <item>mod</item>
        <item>mod1</item>
        <item>modf</item>
        <item>nCr</item>
        <item>nPr</item>
        <item>nan</item>
        <item>nextfloat</item>
        <item>nextpow</item>
        <item>nextpow2</item>
        <item>num</item>
        <item>num2hex</item>
        <item>one</item>
        <item>power_by_squaring</item>
        <item>powermod</item>
        <item>prevfloat</item>
        <item>prevpow</item>
        <item>prevpow2</item>
        <item>radians2degrees</item>
        <item>rational</item>
        <item>real</item>
        <item>real_valued</item>
        <item>realmax</item>
        <item>realmin</item>
        <item>reim</item>
        <item>reinterpret</item>
        <item>rem</item>
        <item>round</item>
        <item>sec</item>
        <item>secd</item>
        <item>sech</item>
        <item>sign</item>
        <item>signbit</item>
        <item>signed</item>
        <item>signif</item>
        <item>significand</item>
        <item>sin</item>
        <item>sinc</item>
        <item>sind</item>
        <item>sinh</item>
        <item>sqrt</item>
        <item>square</item>
        <item>tan</item>
        <item>tand</item>
        <item>tanh</item>
        <item>trailing_ones</item>
        <item>trailing_zeros</item>
        <item>trunc</item>
        <item>uint</item>
        <item>uint128</item>
        <item>uint16</item>
        <item>uint32</item>
        <item>uint64</item>
        <item>uint8</item>
        <item>unsigned</item>
        <item>zero</item>
        <item>nextprod</item>
        <item>prevprod</item>
        <item>isinteger</item>
        <item>typemax</item>
        <item>typemin</item>
        <item>airy</item>
        <item>airyai</item>
        <item>airyprime</item>
        <item>airyaiprime</item>
        <item>airybi</item>
        <item>airybiprime</item>
        <item>besselj0</item>
        <item>besselj1</item>
        <item>besselj</item>
        <item>bessely0</item>
        <item>bessely1</item>
        <item>bessely</item>
        <item>hankelh1</item>
        <item>hankelh2</item>
        <item>besseli</item>
        <item>besselk</item>
        <item>besselh</item>
        <item>beta</item>
        <item>lbeta</item>
        <item>eta</item>
        <item>zeta</item>
        <item>amap</item>
        <item>areduce</item>
        <item>bsxfun</item>
        <item>cartesian_map</item>
        <item>cat</item>
        <item>cell</item>
        <item>circshift</item>
        <item>colon</item>
        <item>conj!</item>
        <item>copy_to</item>
        <item>cumprod</item>
        <item>cumsum</item>
        <item>cumsum_kbn</item>
        <item>cummin</item>
        <item>cummax</item>
        <item>diff</item>
        <item>each_col</item>
        <item>each_col!</item>
        <item>each_row</item>
        <item>each_row!</item>
        <item>each_vec</item>
        <item>each_vec!</item>
        <item>fill</item>
        <item>fill!</item>
        <item>find</item>
        <item>findmax</item>
        <item>findmin</item>
        <item>findn</item>
        <item>findn_nzs</item>
        <item>first</item>
        <item>flipdim</item>
        <item>fliplr</item>
        <item>flipud</item>
        <item>full</item>
        <item>gen_cartesian_map</item>
        <item>gradient</item>
        <item>hcat</item>
        <item>hvcat</item>
        <item>ind2sub</item>
        <item>indmax</item>
        <item>indmin</item>
        <item>invperm</item>
        <item>ipermute</item>
        <item>isperm</item>
        <item>issorted</item>
        <item>issorted_r</item>
        <item>issorted_by</item>
        <item>last</item>
        <item>linspace</item>
        <item>logspace</item>
        <item>max</item>
        <item>min</item>
        <item>ndims</item>
        <item>nnz</item>
        <item>nonzeros</item>
        <item>nthperm</item>
        <item>nthperm!</item>
        <item>ones</item>
        <item>order</item>
        <item>partitions</item>
        <item>pascal</item>
        <item>permute</item>
        <item>prod</item>
        <item>promote_shape</item>
        <item>randcycle</item>
        <item>randperm</item>
        <item>repmat</item>
        <item>reshape</item>
        <item>reverse</item>
        <item>reverse!</item>
        <item>rot180</item>
        <item>rot90</item>
        <item>rotl90</item>
        <item>rotr90</item>
        <item>search_sorted</item>
        <item>search_sorted_r</item>
        <item>search_sorted_by</item>
        <item>search_sorted_first</item>
        <item>search_sorted_first_r</item>
        <item>search_sorted_first_by</item>
        <item>search_sorted_last</item>
        <item>search_sorted_last_r</item>
        <item>search_sorted_last_by</item>
        <item>select</item>
        <item>select_r</item>
        <item>select_by</item>
        <item>select!</item>
        <item>select_r!</item>
        <item>select_by!</item>
        <item>shuffle</item>
        <item>shuffle!</item>
        <item>size</item>
        <item>slice</item>
        <item>slicedim</item>
        <item>sort</item>
        <item>sort!</item>
        <item>sort_by</item>
        <item>sort_by!</item>
        <item>sortperm</item>
        <item>sortperm!</item>
        <item>sortr</item>
        <item>sortr!</item>
        <item>squeeze</item>
        <item>step</item>
        <item>stride</item>
        <item>strides</item>
        <item>sub</item>
        <item>sub2ind</item>
        <item>sum</item>
        <item>sum_kbn</item>
        <item>vcat</item>
        <item>vec</item>
        <item>zeros</item>
        <item>findfirst</item>
        <item>ref_shape</item>
        <item>assign_shape_check</item>
        <item>make_loop_nest</item>
        <item>check_bounds</item>
        <item>insertionsort</item>
        <item>insertionsort!</item>
        <item>quicksort</item>
        <item>quicksort!</item>
        <item>mergesort</item>
        <item>mergesort!</item>
        <item>timsort</item>
        <item>timsort!</item>
        <item>axpy</item>
        <item>chol</item>
        <item>chold</item>
        <item>chold!</item>
        <item>cholpd</item>
        <item>cholpd!</item>
        <item>cond</item>
        <item>cross</item>
        <item>ctranspose</item>
        <item>det</item>
        <item>diag</item>
        <item>diagm</item>
        <item>diagmm</item>
        <item>diagmm!</item>
        <item>dot</item>
        <item>eig</item>
        <item>eigvals</item>
        <item>expm</item>
        <item>eye</item>
        <item>factors</item>
        <item>ishermitian</item>
        <item>isposdef</item>
        <item>isposdef!</item>
        <item>issym</item>
        <item>istril</item>
        <item>istriu</item>
        <item>kron</item>
        <item>ldltd!</item>
        <item>ldltd</item>
        <item>linreg</item>
        <item>lu</item>
        <item>lud</item>
        <item>lud!</item>
        <item>norm</item>
        <item>null</item>
        <item>pinv</item>
        <item>qr</item>
        <item>qrd!</item>
        <item>qrd</item>
        <item>qrp</item>
        <item>qrpd!</item>
        <item>qrpd</item>
        <item>randsym</item>
        <item>rank</item>
        <item>rref</item>
        <item>scale</item>
        <item>scale!</item>
        <item>solve</item>
        <item>svd</item>
        <item>svdvals</item>
        <item>sdd</item>
        <item>sddvals</item>
        <item>symmetrize</item>
        <item>symmetrize!</item>
        <item>trace</item>
        <item>transpose</item>
        <item>trideig</item>
        <item>tril</item>
        <item>triu</item>
        <item>tril!</item>
        <item>triu!</item>
        <item>dense</item>
        <item>full</item>
        <item>issparse</item>
        <item>sparse</item>
        <item>speye</item>
        <item>spones</item>
        <item>sprand</item>
        <item>sprandbool</item>
        <item>sprandn</item>
        <item>spzeros</item>
        <item>bitpack</item>
        <item>bitunpack</item>
        <item>falses</item>
        <item>flipbits</item>
        <item>flipbits!</item>
        <item>rotl</item>
        <item>rotr</item>
        <item> true</item>
        <item>append!</item>
        <item>grow</item>
        <item>insert</item>
        <item>shift</item>
        <item>unshift</item>
        <item>enqueue</item>
        <item>add</item>
        <item>add_each</item>
        <item>add_weak_key</item>
        <item>add_weak_value</item>
        <item>all</item>
        <item>allp</item>
        <item>any</item>
        <item>anyp</item>
        <item>assign</item>
        <item>choose</item>
        <item>complement</item>
        <item>complement!</item>
        <item>contains</item>
        <item>contains_is</item>
        <item>count</item>
        <item>countp</item>
        <item>del</item>
        <item>del_all</item>
        <item>del_each</item>
        <item>elements</item>
        <item>eltype</item>
        <item>get</item>
        <item>has</item>
        <item>hash</item>
        <item>intersect</item>
        <item>intersect!</item>
        <item>isempty</item>
        <item>key</item>
        <item>keys</item>
        <item>keytype</item>
        <item>length</item>
        <item>setdiff</item>
        <item>map</item>
        <item>map_to</item>
        <item>map_to2</item>
        <item>mapreduce</item>
        <item>merge</item>
        <item>merge!</item>
        <item>numel</item>
        <item>pairs</item>
        <item>reduce</item>
        <item>ref</item>
        <item>resize</item>
        <item>similar</item>
        <item>toggle</item>
        <item>toggle_each</item>
        <item>union</item>
        <item>union!</item>
        <item>unique</item>
        <item>values</item>
        <item>valtype</item>
        <item>xor!</item>
        <item>pop</item>
        <item>push</item>
        <item>filter</item>
        <item>filter!</item>
        <item>ascii</item>
        <item>begins_with</item>
        <item>byte_string_classify</item>
        <item>char</item>
        <item>chars</item>
        <item>charwidth</item>
        <item>check_ascii</item>
        <item>check_utf8</item>
        <item>chomp</item>
        <item>chop</item>
        <item>chr2ind</item>
        <item>bytestring</item>
        <item>each_match</item>
        <item>each_search</item>
        <item>ends_with</item>
        <item>escape_string</item>
        <item>first_utf8_byte</item>
        <item>ind2chr</item>
        <item>is_utf8_start</item>
        <item>is_valid_ascii</item>
        <item>is_valid_utf8</item>
        <item>isvalid</item>
        <item>iswalnum</item>
        <item>iswalpha</item>
        <item>iswascii</item>
        <item>iswblank</item>
        <item>iswcntrl</item>
        <item>iswdigit</item>
        <item>iswgraph</item>
        <item>iswlower</item>
        <item>iswprint</item>
        <item>iswpunct</item>
        <item>iswspace</item>
        <item>iswupper</item>
        <item>iswxdigit</item>
        <item>join</item>
        <item>lc</item>
        <item>lcfirst</item>
        <item>lowercase</item>
        <item>lpad</item>
        <item>lstrip</item>
        <item>match</item>
        <item>ismatch</item>
        <item>memchr</item>
        <item>nextind</item>
        <item>prevind</item>
        <item>replace</item>
        <item>rpad</item>
        <item>rstrip</item>
        <item>safe_char</item>
        <item>search</item>
        <item>split</item>
        <item>strcat</item>
        <item>strchr</item>
        <item>string</item>
        <item>strip</item>
        <item>strlen</item>
        <item>strwidth</item>
        <item>thisind</item>
        <item>transform_to_utf8</item>
        <item>uc</item>
        <item>ucfirst</item>
        <item>uppercase</item>
        <item>utf8</item>
        <item>randstring</item>
        <item>bin</item>
        <item>bits</item>
        <item>dec</item>
        <item>dump</item>
        <item>float32_isvalid</item>
        <item>float64_isvalid</item>
        <item>fprintf</item>
        <item>hex</item>
        <item>idump</item>
        <item>is_hex_digit</item>
        <item>ndigits</item>
        <item>ndigits0z</item>
        <item>oct</item>
        <item>parse_bin</item>
        <item>parse_float</item>
        <item>parse_hex</item>
        <item>parse_int</item>
        <item>parse_oct</item>
        <item>print</item>
        <item>print_escaped</item>
        <item>print_joined</item>
        <item>print_matrix</item>
        <item>print_quoted</item>
        <item>print_quoted_literal</item>
        <item>print_shortest</item>
        <item>print_unescaped</item>
        <item>print_unescaped_chars</item>
        <item>printf</item>
        <item>println</item>
        <item>quote_string</item>
        <item>repeat</item>
        <item>repl_show</item>
        <item>show</item>
        <item>showall</item>
        <item>showcompact</item>
        <item>sprint</item>
        <item>sprintf</item>
        <item>repr</item>
        <item>summary</item>
        <item>unescape_chars</item>
        <item>unescape_string</item>
        <item>base</item>
        <item>print_with_color</item>
        <item>info</item>
        <item>warn</item>
        <item>autocor</item>
        <item>betarnd</item>
        <item>chi2rnd</item>
        <item>cor</item>
        <item>cor_pearson</item>
        <item>cor_spearman</item>
        <item>cov</item>
        <item>cov_pearson</item>
        <item>cov_spearman</item>
        <item>decile</item>
        <item>dist</item>
        <item>exprnd</item>
        <item>hist</item>
        <item>histc</item>
        <item>inverse_rle</item>
        <item>iqr</item>
        <item>kurtosis</item>
        <item>mad</item>
        <item>mean</item>
        <item>median</item>
        <item>quantile</item>
        <item>quartile</item>
        <item>quintile</item>
        <item>Rng_MT</item>
        <item>Rng</item>
        <item>rand</item>
        <item>rand!</item>
        <item>randbeta</item>
        <item>randbeta!</item>
        <item>randbool</item>
        <item>randbool!</item>
        <item>randchi2</item>
        <item>randchi2!</item>
        <item>randexp</item>
        <item>randexp!</item>
        <item>randg</item>
        <item>randg!</item>
        <item>randg2</item>
        <item>randi</item>
        <item>randi!</item>
        <item>randival</item>
        <item>randival!</item>
        <item>randn</item>
        <item>randn!</item>
        <item>rle</item>
        <item>skewness</item>
        <item>srand</item>
        <item>std</item>
        <item>tiedrank</item>
        <item>var</item>
        <item>weighted_mean</item>
        <item>bfft</item>
        <item>bfft!</item>
        <item>plan_bfft</item>
        <item>plan_bfft!</item>
        <item>brfft</item>
        <item>plan_brfft</item>
        <item>conv</item>
        <item>conv2</item>
        <item>deconv</item>
        <item>fft</item>
        <item>fft!</item>
        <item>plan_fft</item>
        <item>plan_fft!</item>
        <item>fftshift</item>
        <item>filt</item>
        <item>ifft</item>
        <item>ifft!</item>
        <item>plan_ifft</item>
        <item>plan_ifft!</item>
        <item>ifftshift</item>
        <item>irfft</item>
        <item>plan_irfft</item>
        <item>rfft</item>
        <item>plan_rfft</item>
        <item>xcorr</item>
        <item>dct</item>
        <item> idct</item>
        <item> dct!</item>
        <item> idct!</item>
        <item> plan_dct</item>
        <item> plan_idct</item>
        <item> plan_dct!</item>
        <item> plan_idct!</item>
        <item>start</item>
        <item>done</item>
        <item>next</item>
        <item>enumerate</item>
        <item>zip</item>
        <item>times</item>
        <item>copy</item>
        <item>deepcopy</item>
        <item>deepcopy_internal</item>
        <item>isequal</item>
        <item>isless</item>
        <item>identity</item>
        <item>object_id</item>
        <item>sizeof</item>
        <item>isimmutable</item>
        <item>consume</item>
        <item>current_task</item>
        <item>istaskdone</item>
        <item>produce</item>
        <item>tls</item>
        <item>sleep</item>
        <item>strftime</item>
        <item>strptime</item>
        <item>tic</item>
        <item>time</item>
        <item>time_ns</item>
        <item>toc</item>
        <item>toq</item>
        <item>assert</item>
        <item>error</item>
        <item>rethrow</item>
        <item>backtrace</item>
        <item>system_error</item>
        <item>convert</item>
        <item>isleaftype</item>
        <item>oftype</item>
        <item>promote</item>
        <item>promote_rule</item>
        <item>promote_type</item>
        <item>super</item>
        <item>tintersect</item>
        <item>expand</item>
        <item>macroexpand</item>
        <item>esc</item>
        <item>expr</item>
        <item>gensym</item>
        <item>parse</item>
        <item>parse_input_line</item>
        <item>parseatom</item>
        <item>symbol</item>
        <item>ans</item>
        <item>apropos</item>
        <item>function_loc</item>
        <item>edit</item>
        <item>methods</item>
        <item>help</item>
        <item>less</item>
        <item>names</item>
        <item>module_name</item>
        <item>module_parent</item>
        <item>which</item>
        <item>whicht</item>
        <item>whos</item>
        <item>isinteractive</item>
        <item>disassemble</item>
        <item>finfer</item>
        <item>evalfile</item>
        <item>find_in_path</item>
        <item>include</item>
        <item>include_string</item>
        <item>load</item>
        <item>reload</item>
        <item>require</item>
        <item>julia_pkgdir</item>
        <item>compile_hint</item>
        <item>finalizer</item>
        <item>gc</item>
        <item>gc_disable</item>
        <item>gc_enable</item>
        <item>isconst</item>
        <item>isgeneric</item>
        <item>exit</item>
        <item>quit</item>
        <item>atexit</item>
        <item>ntuple</item>
        <item>peakflops</item>
        <item>tty_cols</item>
        <item>tty_rows</item>
        <item>add_fd_handler</item>
        <item>close</item>
        <item>countlines</item>
        <item>csvread</item>
        <item>csvwrite</item>
        <item>del_fd_handler</item>
        <item>deserialize</item>
        <item>dlmread</item>
        <item>dlmwrite</item>
        <item>each_line</item>
        <item>eatwspace</item>
        <item>eatwspace_comment</item>
        <item>eof</item>
        <item>fd</item>
        <item>fdio</item>
        <item>flush</item>
        <item>gethostname</item>
        <item>getipaddr</item>
        <item>htol</item>
        <item>hton</item>
        <item>ltoh</item>
        <item>ntoh</item>
        <item>memio</item>
        <item>mmap</item>
        <item>mmap_array</item>
        <item>mmap_bitarray</item>
        <item>mmap_grow</item>
        <item>mmap_stream_settings</item>
        <item>msync</item>
        <item>munmap</item>
        <item>nb_available</item>
        <item>open</item>
        <item>position</item>
        <item>read</item>
        <item>readall</item>
        <item>readchomp</item>
        <item>readdir</item>
        <item>readline</item>
        <item>readlines</item>
        <item>readuntil</item>
        <item>seek</item>
        <item>seek_end</item>
        <item>select_read</item>
        <item>serialize</item>
        <item>skip</item>
        <item>stderr</item>
        <item>stderr_stream</item>
        <item>stdin</item>
        <item>stdin_stream</item>
        <item>stdout</item>
        <item>stdout_stream</item>
        <item>takebuf_array</item>
        <item>takebuf_string</item>
        <item>truncate</item>
        <item>with_output_to_string</item>
        <item>write</item>
        <item>addprocs_local</item>
        <item>addprocs_sge</item>
        <item>addprocs_ssh</item>
        <item>addprocs_ssh_tunnel</item>
        <item>at_each</item>
        <item>fetch</item>
        <item>isready</item>
        <item>make_scheduled</item>
        <item>yield</item>
        <item>enq_work</item>
        <item>myid</item>
        <item>nprocs</item>
        <item>pfor</item>
        <item>pmap</item>
        <item>preduce</item>
        <item>put</item>
        <item>remote_call</item>
        <item>remote_call_fetch</item>
        <item>remote_call_wait</item>
        <item>remote_do</item>
        <item>rr2id</item>
        <item>spawn</item>
        <item>spawnat</item>
        <item>spawnlocal</item>
        <item>take</item>
        <item>defaultdist</item>
        <item>distribute</item>
        <item>drand</item>
        <item>drandn</item>
        <item>localize</item>
        <item>myindexes</item>
        <item>procs</item>
        <item>splitdir</item>
        <item>splitdrive</item>
        <item>splitext</item>
        <item>dirname</item>
        <item>basename</item>
        <item>isabspath</item>
        <item>joinpath</item>
        <item>normpath</item>
        <item>abspath</item>
        <item>realpath</item>
        <item>expanduser</item>
        <item>cd</item>
        <item>pwd</item>
        <item>is_file_readable</item>
        <item>ls</item>
        <item>cp</item>
        <item>rm</item>
        <item>touch</item>
        <item>mv</item>
        <item>mkdir</item>
        <item>rmdir</item>
        <item>tmpnam</item>
        <item>tempdir</item>
        <item>tempname</item>
        <item>mktemp</item>
        <item>mktempdir</item>
        <item>download_file</item>
        <item>filemode</item>
        <item>filesize</item>
        <item>mtime</item>
        <item>ctime</item>
        <item>stat</item>
        <item>lstat</item>
        <item>isfifo</item>
        <item>ispath</item>
        <item>ischardev</item>
        <item>isdir</item>
        <item>isblockdev</item>
        <item>isfile</item>
        <item>islink</item>
        <item>issocket</item>
        <item>issetuid</item>
        <item>issetgid</item>
        <item>issticky</item>
        <item>isreadable</item>
        <item>iswriteable</item>
        <item>isexecutable</item>
        <item>uperm</item>
        <item>gperm</item>
        <item>operm</item>
        <item>cmd_stdin_stream</item>
        <item>cmd_stdout_stream</item>
        <item>cmds</item>
        <item>connect</item>
        <item>dup2</item>
        <item>exec</item>
        <item>fork</item>
        <item>getpid</item>
        <item>ignorestatus</item>
        <item>make_pipe</item>
        <item>other</item>
        <item>output</item>
        <item>pipeline_error</item>
        <item>process_exit_status</item>
        <item>process_exited</item>
        <item>process_options</item>
        <item>process_running</item>
        <item>process_signaled</item>
        <item>process_status</item>
        <item>process_stop_signal</item>
        <item>process_stopped</item>
        <item>process_term_signal</item>
        <item>read_from</item>
        <item>run</item>
        <item>setsuccess</item>
        <item>success</item>
        <item>successful</item>
        <item>system</item>
        <item>wait</item>
        <item>wait_nohang</item>
        <item>write_to</item>
        <item>c_free</item>
        <item>dlopen</item>
        <item>dlsym</item>
        <item>dlsym_e</item>
        <item>errno</item>
        <item>getenv</item>
        <item>hasenv</item>
        <item>pointer</item>
        <item>pointer_to_array</item>
        <item>cfunction</item>
        <item>setenv</item>
        <item>strerror</item>
        <item>unsafe_ref</item>
        <item>unsafe_assign</item>
        <item>unsetenv</item>
    </list>
    <contexts>

      <context name="_normal" attribute="Normal Text" lineEndContext="#stay">

	<DetectSpaces />

        <!-- Blocks -->
        <keyword context="#stay" attribute="Keyword" String="block_begin" 
beginRegion="block" />
        <keyword context="#stay" attribute="Keyword" String="block_eb" 
endRegion="block" beginRegion="block" />
        <keyword context="#stay" attribute="Keyword" String="block_end" 
endRegion="block" />
        <StringDetect String="#BEGIN" context="region_marker" attribute="FoldingComment" beginRegion="user_region" />
        <StringDetect String="#END" context="region_marker" attribute="FoldingComment" endRegion="user_region" />

        <!-- Keywords, types, and comments -->
        <keyword context="#stay" attribute="Functions" String="functions" />
        <keyword context="#stay" attribute="Keyword" String="keywords" />
        <keyword context="#stay" attribute="Data Type" String="types" />
        <DetectChar char="#" context="1-comment" attribute="Comment"/>

	<!-- Lists and arrays -->
        <!-- <DetectChar char="(" context="nested" beginRegion="nested" attribute="Delimiter" />
        <DetectChar char="[" context="squared" beginRegion="squared" attribute="Delimiter" />
        <DetectChar char="{" context="curly" beginRegion="curly" attribute="Delimiter" /> -->

        <!-- Strings -->
	<DetectChar attribute="String" context="String" char="&quot;"/>

        <!-- Multi-character operators -->
        <StringDetect context="#stay" attribute="Operator" String="..."/>
        <StringDetect context="#stay" attribute="Operator" String="::"/>
        <StringDetect context="#stay" attribute="Operator" String="&gt;&gt;&gt;"/>
        <StringDetect context="#stay" attribute="Operator" String="&gt;&gt;"/>
        <StringDetect context="#stay" attribute="Operator" String="&lt;&lt;"/>
        <StringDetect context="#stay" attribute="Operator" String="=="/>
        <StringDetect context="#stay" attribute="Operator" String="!="/>
        <StringDetect context="#stay" attribute="Operator" String="&lt;="/>
        <StringDetect context="#stay" attribute="Operator" String="&gt;="/>
        <StringDetect context="#stay" attribute="Operator" String="&amp;&amp;"/>
        <StringDetect context="#stay" attribute="Operator" String="||"/>
        <StringDetect context="#stay" attribute="Operator" String=".*"/>
        <StringDetect context="#stay" attribute="Operator" String=".^"/>
        <StringDetect context="#stay" attribute="Operator" String="./"/>
        <StringDetect context="#stay" attribute="Operator" String=".'"/>
        <StringDetect context="#stay" attribute="Operator" String="+="/>
        <StringDetect context="#stay" attribute="Operator" String="-="/>
        <StringDetect context="#stay" attribute="Operator" String="*="/>
        <StringDetect context="#stay" attribute="Operator" String="/="/>
        <StringDetect context="#stay" attribute="Operator" String="&amp;="/>
        <StringDetect context="#stay" attribute="Operator" String="|="/>
        <StringDetect context="#stay" attribute="Operator" String="$="/>
        <StringDetect context="#stay" attribute="Operator" String="&gt;&gt;&gt;="/>
        <StringDetect context="#stay" attribute="Operator" String="&gt;&gt;="/>
        <StringDetect context="#stay" attribute="Operator" String="&lt;&lt;="/>

        <!-- Look-ahead for adjoint ' after variable, number literal, closing braces and .' -->
        <RegExpr context="_adjoint" attribute="Variable" String="[a-zA-Z]\w*(?=')" />
        <RegExpr context="_adjoint" attribute="Float" String="(\d+(\.\d+)?|\.\d+)([eE][+-]?\d+)?(im)?(?=')" />
        <RegExpr context="_adjoint" attribute="Delimiter" String="[\)\]}](?=')" />
        <RegExpr context="_adjoint" attribute="Operator" String="\.'(?=')" />

        <!-- If ' is not the adjoint operator, it starts a character or an unterminated char -->
        <RegExpr context="#stay" attribute="Char" String="'[^']*(''[^']*)*'(?=[^']|$)" />
        <RegExpr context="#stay" attribute="Incomplete Char" String="'[^']*(''[^']*)*" />

        <!-- Identifiers, numbers and braces -->
        <!-- We can't use HlCHex, Int, and Float because we need to allow the "im" at the end of complex numbers -->
        <DetectIdentifier context="#stay" attribute="Variable" />
        <RegExpr context="#stay" attribute="Hex" String="0x[0-9a-fA-F]+(im)?" />
        <RegExpr context="#stay" attribute="Float" String="(\d+(\.\d+)?|\.\d+)([eE][+-]?\d+)?(im)?" />
        <AnyChar context="#stay" attribute="Delimiter" String="()[]{}"/>

        <!-- Single-character operators -->
        <AnyChar context="#stay" attribute="Operator" String="*+-/\&amp;|&lt;&gt;~$!^=,;:@"/>

      </context>

      <!-- Context for user block (#BEGIN...#END) -->
      <context name="region_marker" lineEndContext="#pop" attribute="FoldingComment" >
        <IncludeRules context="1-comment" />
      </context>

      <!-- Contexts entered after beginning a list or array -->
      <context name="nested" attribute="Normal text" lineEndContext="#stay">
        <DetectChar char=")" context="#pop" endRegion="nested" attribute="Delimiter" />
      </context>
      <context name="squared" attribute="Normal text" lineEndContext="#stay">
        <DetectChar char="]" context="#pop" endRegion="squared" attribute="Delimiter" />
      </context>
      <context name="curly" attribute="Normal text" lineEndContext="#stay">
        <DetectChar char="}" context="#pop" endRegion="curly" attribute="Delimiter" />
      </context>

      <!-- Context entered after encountering an ' adjoint operator -->
      <context name="_adjoint" attribute="Operator" lineEndContext="#pop">
        <RegExpr context="#pop" attribute="Operator" String="'+" />
      </context>

      <!-- Context entered after encountering an " (string) -->
      <context attribute="String" lineEndContext="#pop" name="String">
        <DetectSpaces />
        <DetectIdentifier />
        <LineContinue attribute="String" context="#stay"/>
        <HlCStringChar attribute="String Char" context="#stay"/>
        <DetectChar attribute="String" context="#pop" char="&quot;"/>
      </context>

      <!-- 1-line comment: #pop@EOL  -->
      <context name="1-comment" lineEndContext="#pop" attribute="Comment">
        <DetectSpaces />
        <DetectIdentifier />
      </context>

    </contexts>

    <itemDatas>
      <itemData name="Normal Text" defStyleNum="dsNormal" />
      <itemData name="Variable" defStyleNum="dsNormal" />
      <itemData name="Operator" defStyleNum="dsNormal"/>
      <itemData name="Functions" defStyleNum="dsFunction"/>
      <itemData name="Decimal" defStyleNum="dsDecVal" />
      <itemData name="Float" defStyleNum="dsFloat" />
      <itemData name="Hex" defStyleNum="dsBaseN" />
      <itemData name="Delimiter" defStyleNum="dsNormal" />
      <itemData name="String" defStyleNum="dsString"/>
      <itemData name="Char" defStyleNum="dsChar"/>
      <itemData name="Incomplete Char" defStyleNum="dsChar"/>
      <itemData name="System" defStyleNum="dsBaseN"/>
      <itemData name="Keyword" defStyleNum="dsKeyword"/>
      <itemData name="Data Type" defStyleNum="dsDataType"/>
      <itemData name="Comment" defStyleNum="dsComment"/>
      <itemData name="FoldingComment" defStyleNum="dsComment" />
    </itemDatas>

  </highlighting>

  <general>
    <comments>
      <comment name="singleLine" start="#" />
    </comments>
    <keywords casesensitive="1" weakDeliminator=""/>
  </general>

</language>

<!-- It's recommended to put the following line in the Variables field under Settings->Configure Kate->Open/Save->Modes&Filetypes -->
<!-- kate: space-indent on; indent-width 4; mixed-indent off; indent-mode cstyle; -->
