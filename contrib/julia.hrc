<?xml version="1.0" encoding="windows-1251"?>
<!DOCTYPE hrc PUBLIC "-//Cail Lomecb//DTD Colorer HRC take5//EN"
  "http://colorer.sf.net/2003/hrc.dtd">
<hrc version="take5" xmlns="http://colorer.sf.net/2003/hrc"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://colorer.sf.net/2003/hrc http://colorer.sf.net/2003/hrc.xsd">
<!--
    Julia Syntax description for Colorer
-->
   <type name="julia">

      <import type="def"/>

      <region name="mlString" parent="def:SymbolStrong"/>
      <region name="mlComment" parent="def:Comment"/>
      <region name="mlSymb" parent="def:Symbol"/>
      <region name="mlKeyWord" parent="def:Keyword"/>
      <region name="mlStdFunc" parent="def:TypeKeyword"/>
      <region name="mlNumb" parent="def:Number"/>
      <region name="mlId" parent="def:Var"/>
      <region name="mlLabel" parent="def:Label"/>
     
      <scheme name="julia">
<!-- Comments -->
         <block start="/\#\=/" end="/\=\#/" scheme="Comment" region="mlComment"/>
         <block start="/\#/" end="/$/" scheme="Comment" region="mlComment"/>
<!-- Strings -->
         <regexp match="/&#34;.*?&#34;/" region0="mlString"/>
         <regexp match="/'.*?'/" region0="mlString"/>
         <block start="/(\()/" end="/(\))/" scheme="julia" region00="Symbol" region01="PairStart" region10="Symbol" region11="PairEnd"/>
         <block start="/(\[)/" end="/(\])/" scheme="julia" region00="Symbol" region01="PairStart" region10="Symbol" region11="PairEnd"/>
<!-- Operator brackets -->
         <block start="/(\bfunction\b)/" end="/(\bend\b)/" scheme="julia" region00="mlKeyWord" region01="PairStart" region10="mlKeyWord" region11="PairEnd"/>
         <block start="/(\bfor\b)/" end="/(\bend\b)/" scheme="julia" region00="mlKeyWord" region01="PairStart" region10="mlKeyWord" region11="PairEnd"/>
         <block start="/(\bif\b)/" end="/(\bend\b)/" scheme="julia" region00="mlKeyWord" region01="PairStart" region10="mlKeyWord" region11="PairEnd"/>
         <block start="/(\bwhile\b)/" end="/(\bend\b)/" scheme="julia" region00="mlKeyWord" region01="PairStart" region10="mlKeyWord" region11="PairEnd"/>
         <block start="/(\bmutable struct\b)/" end="/(\bend\b)/" scheme="julia" region00="mlKeyWord" region01="PairStart" region10="mlKeyWord" region11="PairEnd"/>
         <block start="/(\bstruct\b)/" end="/(\bend\b)/" scheme="julia" region00="mlKeyWord" region01="PairStart" region10="mlKeyWord" region11="PairEnd"/>
         <block start="/(\bmacro\b)/" end="/(\bend\b)/" scheme="julia" region00="mlKeyWord" region01="PairStart" region10="mlKeyWord" region11="PairEnd"/>
         <block start="/(\bquote\b)/" end="/(\bend\b)/" scheme="julia" region00="mlKeyWord" region01="PairStart" region10="mlKeyWord" region11="PairEnd"/>
         <block start="/(\bmodule\b)/" end="/(\bend\b)/" scheme="julia" region00="mlKeyWord" region01="PairStart" region10="mlKeyWord" region11="PairEnd"/>
         <block start="/(\bbaremodule\b)/" end="/(\bend\b)/" scheme="julia" region00="mlKeyWord" region01="PairStart" region10="mlKeyWord" region11="PairEnd"/>
         <block start="/(\bdo\b)/" end="/(\bend\b)/" scheme="julia" region00="mlKeyWord" region01="PairStart" region10="mlKeyWord" region11="PairEnd"/>
         <block start="/(\blet\b)/" end="/(\bend\b)/" scheme="julia" region00="mlKeyWord" region01="PairStart" region10="mlKeyWord" region11="PairEnd"/>
         <block start="/(\bbegin\b)/" end="/(\bend\b)/" scheme="julia" region00="mlKeyWord" region01="PairStart" region10="mlKeyWord" region11="PairEnd"/>
         <block start="/(\btry\b)/" end="/(\bend\b)/" scheme="julia" region00="mlKeyWord" region01="PairStart" region10="mlKeyWord" region11="PairEnd"/>
<!-- Symbols -->
         <keywords region="mlSymb">
            <symb name="+"/>
            <symb name="-"/>
            <symb name="*"/>
            <symb name="/"/>
            <symb name="\"/>
            <symb name="^"/>
            <symb name="'"/>
            <symb name="."/>
            <symb name="="/>
            <symb name="&lt;"/>
            <symb name="&gt;"/>
            <symb name="~"/>
            <symb name="&amp;"/>
            <symb name="|"/>
            <symb name="["/>
            <symb name="]"/>
            <symb name="("/>
            <symb name=")"/>
            <symb name=";"/>
            <symb name=":"/>
            <symb name="%"/>
            <symb name=","/>
            <symb name="!"/>
         </keywords>
<!-- KeyWords -->
         <keywords region="mlKeyWord">
            <word name="function"/>
            <word name="global"/>
            <word name="for"/>
            <word name="end"/>
            <word name="while"/>
            <word name="if"/>
            <word name="else"/>
            <word name="elseif"/>
            <word name="break"/>
            <word name="try"/>
            <word name="catch"/>
            <word name="finally"/>
            <word name="const"/>
            <word name="struct"/>
            <word name="import"/>
            <word name="importall"/>
            <word name="export"/>
            <word name="mutable struct"/>
            <word name="typealias"/>
            <word name="return"/>
            <word name="true"/>
            <word name="false"/>
            <word name="macro"/>
            <word name="quote"/>
            <word name="in"/>
            <word name="abstract type"/>
            <word name="module"/>
            <word name="using"/>
            <word name="continue"/>
            <word name="do"/>
            <word name="let"/>
            <word name="begin"/>
            <word name="local"/>
            <word name="primitive type"/>
            <word name="baremodule"/>
         </keywords>
<!-- General types -->
         <keywords region="mlStdFunc">
            <word name="Array"/>
            <word name="AbstractString"/>
            <word name="Bool"/>
            <word name="Number"/>
            <word name="Int"/>
            <word name="Integer"/>
            <word name="Real"/>
            <word name="Complex"/>
            <word name="AbstractFloat"/>
            <word name="Float64"/>
            <word name="Float32"/>
            <word name="Int8"/>
            <word name="Int16"/>
            <word name="Int32"/>
            <word name="Int64"/>
            <word name="Rational"/>
            <word name="AbstractArray"/>
            <word name="Unsigned"/>
            <word name="Signed"/>
            <word name="UInt"/>
            <word name="UInt8"/>
            <word name="UInt16"/>
            <word name="UInt32"/>
            <word name="UInt64"/>
            <word name="Vector"/>
            <word name="AbstractVector"/>
            <word name="Matrix"/>
            <word name="AbstractMatrix"/>
            <word name="Type"/>
            <word name="IO"/>
            <word name="Any"/>
            <word name="String"/>
            <word name="Union"/>
            <word name="Dict"/>
            <word name="Function"/>
            <word name="SubArray"/>
            <word name="Range"/>
            <word name="Range1"/>
            <word name="Symbol"/>
            <word name="Expr"/>
         </keywords>
      </scheme>

   </type>
</hrc>
